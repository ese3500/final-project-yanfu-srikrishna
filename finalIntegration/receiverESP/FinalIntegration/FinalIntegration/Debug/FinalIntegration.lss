
FinalIntegration.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000027e  00800100  00001456  000014ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001456  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  0080037e  0080037e  00001768  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001768  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fde  00000000  00000000  0000195c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e73  00000000  00000000  0000393a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cd1  00000000  00000000  000047ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004d8  00000000  00000000  00005480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000081a  00000000  00000000  00005958  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018b7  00000000  00000000  00006172  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00007a29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__ctors_end>
       4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      5c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b4:	05 a8       	ldd	r0, Z+53	; 0x35
      b6:	4c cd       	rjmp	.-1384   	; 0xfffffb50 <__eeprom_end+0xff7efb50>
      b8:	b2 d4       	rcall	.+2404   	; 0xa1e <__divsf3_pse+0x74>
      ba:	4e b9       	out	0x0e, r20	; 14
      bc:	38 36       	cpi	r19, 0x68	; 104
      be:	a9 02       	muls	r26, r25
      c0:	0c 50       	subi	r16, 0x0C	; 12
      c2:	b9 91       	ld	r27, Y+
      c4:	86 88       	ldd	r8, Z+22	; 0x16
      c6:	08 3c       	cpi	r16, 0xC8	; 200
      c8:	a6 aa       	std	Z+54, r10	; 0x36
      ca:	aa 2a       	or	r10, r26
      cc:	be 00       	.word	0x00be	; ????
      ce:	00 00       	nop
      d0:	80 3f       	cpi	r24, 0xF0	; 240

000000d2 <__ctors_end>:
      d2:	11 24       	eor	r1, r1
      d4:	1f be       	out	0x3f, r1	; 63
      d6:	cf ef       	ldi	r28, 0xFF	; 255
      d8:	d8 e0       	ldi	r29, 0x08	; 8
      da:	de bf       	out	0x3e, r29	; 62
      dc:	cd bf       	out	0x3d, r28	; 61

000000de <__do_copy_data>:
      de:	13 e0       	ldi	r17, 0x03	; 3
      e0:	a0 e0       	ldi	r26, 0x00	; 0
      e2:	b1 e0       	ldi	r27, 0x01	; 1
      e4:	e6 e5       	ldi	r30, 0x56	; 86
      e6:	f4 e1       	ldi	r31, 0x14	; 20
      e8:	02 c0       	rjmp	.+4      	; 0xee <__do_copy_data+0x10>
      ea:	05 90       	lpm	r0, Z+
      ec:	0d 92       	st	X+, r0
      ee:	ae 37       	cpi	r26, 0x7E	; 126
      f0:	b1 07       	cpc	r27, r17
      f2:	d9 f7       	brne	.-10     	; 0xea <__do_copy_data+0xc>

000000f4 <__do_clear_bss>:
      f4:	23 e0       	ldi	r18, 0x03	; 3
      f6:	ae e7       	ldi	r26, 0x7E	; 126
      f8:	b3 e0       	ldi	r27, 0x03	; 3
      fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
      fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
      fe:	a4 3b       	cpi	r26, 0xB4	; 180
     100:	b2 07       	cpc	r27, r18
     102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
     104:	0e 94 2b 03 	call	0x656	; 0x656 <main>
     108:	0c 94 29 0a 	jmp	0x1452	; 0x1452 <_exit>

0000010c <__bad_interrupt>:
     10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <UART_init>:

void UART_init(int BAUD_PRESCALER)
{
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(BAUD_PRESCALER>>8);
     110:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)BAUD_PRESCALER;
     114:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     118:	88 e1       	ldi	r24, 0x18	; 24
     11a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/* Set frame format: 2 stop bits, 8 data bits */
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); // 8 data bits
     11e:	e2 ec       	ldi	r30, 0xC2	; 194
     120:	f0 e0       	ldi	r31, 0x00	; 0
     122:	86 e0       	ldi	r24, 0x06	; 6
     124:	80 83       	st	Z, r24
	UCSR0C |= (1<<USBS0); // 2 stop bits
     126:	80 81       	ld	r24, Z
     128:	88 60       	ori	r24, 0x08	; 8
     12a:	80 83       	st	Z, r24
     12c:	08 95       	ret

0000012e <UART_send>:
}

void UART_send(unsigned char data)
{
	// Wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
     12e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     132:	95 ff       	sbrs	r25, 5
     134:	fc cf       	rjmp	.-8      	; 0x12e <UART_send>
	// Put data into buffer and send data
	UDR0 = data;
     136:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     13a:	08 95       	ret

0000013c <UART_receive>:
}

//receive
unsigned char UART_receive(void)
{
	while( !(UCSR0A & (1<<RXC0)));
     13c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     140:	88 23       	and	r24, r24
     142:	e4 f7       	brge	.-8      	; 0x13c <UART_receive>
	PORTB |= (1<<PORTB0);
     144:	85 b1       	in	r24, 0x05	; 5
     146:	81 60       	ori	r24, 0x01	; 1
     148:	85 b9       	out	0x05, r24	; 5
	return UDR0;
     14a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     14e:	08 95       	ret

00000150 <UART_putstring>:

void UART_putstring(char* StringPtr)
{
     150:	cf 93       	push	r28
     152:	df 93       	push	r29
     154:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
     156:	03 c0       	rjmp	.+6      	; 0x15e <UART_putstring+0xe>
	{
		UART_send(*StringPtr);
     158:	0e 94 97 00 	call	0x12e	; 0x12e <UART_send>
		StringPtr++;
     15c:	21 96       	adiw	r28, 0x01	; 1
	return UDR0;
}

void UART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
     15e:	88 81       	ld	r24, Y
     160:	81 11       	cpse	r24, r1
     162:	fa cf       	rjmp	.-12     	; 0x158 <UART_putstring+0x8>
	{
		UART_send(*StringPtr);
		StringPtr++;
	}
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	08 95       	ret

0000016a <LCD_drawPixel>:
	LCD_drawCircle(*x0, *y0, radius, WHITE); 
		*x0 += *vx;
		*y0 += *vy; 
		LCD_drawCircle(*x0, *y0, radius, GREEN); 

}
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ea 01       	movw	r28, r20
     170:	26 2f       	mov	r18, r22
     172:	48 2f       	mov	r20, r24
     174:	0e 94 1e 04 	call	0x83c	; 0x83c <LCD_setAddr>
     178:	ce 01       	movw	r24, r28
     17a:	0e 94 c0 03 	call	0x780	; 0x780 <SPI_ControllerTx_16bit>
     17e:	df 91       	pop	r29
     180:	cf 91       	pop	r28
     182:	08 95       	ret

00000184 <LCD_drawChar>:
     184:	7f 92       	push	r7
     186:	8f 92       	push	r8
     188:	9f 92       	push	r9
     18a:	af 92       	push	r10
     18c:	bf 92       	push	r11
     18e:	cf 92       	push	r12
     190:	df 92       	push	r13
     192:	ef 92       	push	r14
     194:	ff 92       	push	r15
     196:	0f 93       	push	r16
     198:	1f 93       	push	r17
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	5a 01       	movw	r10, r20
     1a0:	90 e2       	ldi	r25, 0x20	; 32
     1a2:	a9 1a       	sub	r10, r25
     1a4:	b1 08       	sbc	r11, r1
     1a6:	40 ea       	ldi	r20, 0xA0	; 160
     1a8:	50 e0       	ldi	r21, 0x00	; 0
     1aa:	48 1b       	sub	r20, r24
     1ac:	51 09       	sbc	r21, r1
     1ae:	48 30       	cpi	r20, 0x08	; 8
     1b0:	51 05       	cpc	r21, r1
     1b2:	0c f4       	brge	.+2      	; 0x1b6 <LCD_drawChar+0x32>
     1b4:	41 c0       	rjmp	.+130    	; 0x238 <LCD_drawChar+0xb4>
     1b6:	40 e8       	ldi	r20, 0x80	; 128
     1b8:	50 e0       	ldi	r21, 0x00	; 0
     1ba:	46 1b       	sub	r20, r22
     1bc:	51 09       	sbc	r21, r1
     1be:	48 30       	cpi	r20, 0x08	; 8
     1c0:	51 05       	cpc	r21, r1
     1c2:	8c f5       	brge	.+98     	; 0x226 <LCD_drawChar+0xa2>
     1c4:	39 c0       	rjmp	.+114    	; 0x238 <LCD_drawChar+0xb4>
     1c6:	f5 01       	movw	r30, r10
     1c8:	ee 0f       	add	r30, r30
     1ca:	ff 1f       	adc	r31, r31
     1cc:	ee 0f       	add	r30, r30
     1ce:	ff 1f       	adc	r31, r31
     1d0:	ea 0d       	add	r30, r10
     1d2:	fb 1d       	adc	r31, r11
     1d4:	e7 57       	subi	r30, 0x77	; 119
     1d6:	fe 4f       	sbci	r31, 0xFE	; 254
     1d8:	ee 0d       	add	r30, r14
     1da:	ff 1d       	adc	r31, r15
     1dc:	70 80       	ld	r7, Z
     1de:	c0 e0       	ldi	r28, 0x00	; 0
     1e0:	d0 e0       	ldi	r29, 0x00	; 0
     1e2:	1a c0       	rjmp	.+52     	; 0x218 <LCD_drawChar+0x94>
     1e4:	27 2d       	mov	r18, r7
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	0c 2e       	mov	r0, r28
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <LCD_drawChar+0x6c>
     1ec:	35 95       	asr	r19
     1ee:	27 95       	ror	r18
     1f0:	0a 94       	dec	r0
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <LCD_drawChar+0x68>
     1f4:	20 ff       	sbrs	r18, 0
     1f6:	08 c0       	rjmp	.+16     	; 0x208 <LCD_drawChar+0x84>
     1f8:	a6 01       	movw	r20, r12
     1fa:	6c 2f       	mov	r22, r28
     1fc:	68 0d       	add	r22, r8
     1fe:	89 2d       	mov	r24, r9
     200:	8e 0d       	add	r24, r14
     202:	0e 94 b5 00 	call	0x16a	; 0x16a <LCD_drawPixel>
     206:	07 c0       	rjmp	.+14     	; 0x216 <LCD_drawChar+0x92>
     208:	a8 01       	movw	r20, r16
     20a:	6c 2f       	mov	r22, r28
     20c:	68 0d       	add	r22, r8
     20e:	89 2d       	mov	r24, r9
     210:	8e 0d       	add	r24, r14
     212:	0e 94 b5 00 	call	0x16a	; 0x16a <LCD_drawPixel>
     216:	21 96       	adiw	r28, 0x01	; 1
     218:	c8 30       	cpi	r28, 0x08	; 8
     21a:	d1 05       	cpc	r29, r1
     21c:	1c f3       	brlt	.-58     	; 0x1e4 <LCD_drawChar+0x60>
     21e:	9f ef       	ldi	r25, 0xFF	; 255
     220:	e9 1a       	sub	r14, r25
     222:	f9 0a       	sbc	r15, r25
     224:	05 c0       	rjmp	.+10     	; 0x230 <LCD_drawChar+0xac>
     226:	69 01       	movw	r12, r18
     228:	86 2e       	mov	r8, r22
     22a:	98 2e       	mov	r9, r24
     22c:	e1 2c       	mov	r14, r1
     22e:	f1 2c       	mov	r15, r1
     230:	85 e0       	ldi	r24, 0x05	; 5
     232:	e8 16       	cp	r14, r24
     234:	f1 04       	cpc	r15, r1
     236:	3c f2       	brlt	.-114    	; 0x1c6 <LCD_drawChar+0x42>
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	df 90       	pop	r13
     246:	cf 90       	pop	r12
     248:	bf 90       	pop	r11
     24a:	af 90       	pop	r10
     24c:	9f 90       	pop	r9
     24e:	8f 90       	pop	r8
     250:	7f 90       	pop	r7
     252:	08 95       	ret

00000254 <max>:
     254:	68 17       	cp	r22, r24
     256:	79 07       	cpc	r23, r25
     258:	14 f0       	brlt	.+4      	; 0x25e <max+0xa>
     25a:	86 2f       	mov	r24, r22
     25c:	97 2f       	mov	r25, r23
     25e:	08 95       	ret

00000260 <min>:
     260:	86 17       	cp	r24, r22
     262:	97 07       	cpc	r25, r23
     264:	14 f0       	brlt	.+4      	; 0x26a <min+0xa>
     266:	86 2f       	mov	r24, r22
     268:	97 2f       	mov	r25, r23
     26a:	08 95       	ret

0000026c <LCD_drawBlock>:
     26c:	cf 92       	push	r12
     26e:	df 92       	push	r13
     270:	ef 92       	push	r14
     272:	ff 92       	push	r15
     274:	0f 93       	push	r16
     276:	1f 93       	push	r17
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	f8 2e       	mov	r15, r24
     27e:	e6 2e       	mov	r14, r22
     280:	d4 2e       	mov	r13, r20
     282:	c2 2e       	mov	r12, r18
     284:	0e 94 1e 04 	call	0x83c	; 0x83c <LCD_setAddr>
     288:	c0 e0       	ldi	r28, 0x00	; 0
     28a:	d0 e0       	ldi	r29, 0x00	; 0
     28c:	04 c0       	rjmp	.+8      	; 0x296 <LCD_drawBlock+0x2a>
     28e:	c8 01       	movw	r24, r16
     290:	0e 94 c0 03 	call	0x780	; 0x780 <SPI_ControllerTx_16bit>
     294:	21 96       	adiw	r28, 0x01	; 1
     296:	2d 2d       	mov	r18, r13
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	2f 19       	sub	r18, r15
     29c:	31 09       	sbc	r19, r1
     29e:	8c 2d       	mov	r24, r12
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	8e 19       	sub	r24, r14
     2a4:	91 09       	sbc	r25, r1
     2a6:	28 9f       	mul	r18, r24
     2a8:	a0 01       	movw	r20, r0
     2aa:	29 9f       	mul	r18, r25
     2ac:	50 0d       	add	r21, r0
     2ae:	38 9f       	mul	r19, r24
     2b0:	50 0d       	add	r21, r0
     2b2:	11 24       	eor	r1, r1
     2b4:	c4 17       	cp	r28, r20
     2b6:	d5 07       	cpc	r29, r21
     2b8:	54 f3       	brlt	.-44     	; 0x28e <LCD_drawBlock+0x22>
     2ba:	df 91       	pop	r29
     2bc:	cf 91       	pop	r28
     2be:	1f 91       	pop	r17
     2c0:	0f 91       	pop	r16
     2c2:	ff 90       	pop	r15
     2c4:	ef 90       	pop	r14
     2c6:	df 90       	pop	r13
     2c8:	cf 90       	pop	r12
     2ca:	08 95       	ret

000002cc <LCD_drawLine>:
     2cc:	3f 92       	push	r3
     2ce:	4f 92       	push	r4
     2d0:	5f 92       	push	r5
     2d2:	6f 92       	push	r6
     2d4:	7f 92       	push	r7
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	6c 01       	movw	r12, r24
     2f0:	eb 01       	movw	r28, r22
     2f2:	4a 01       	movw	r8, r20
     2f4:	59 01       	movw	r10, r18
     2f6:	ba 01       	movw	r22, r20
     2f8:	0e 94 30 01 	call	0x260	; 0x260 <min>
     2fc:	68 2e       	mov	r6, r24
     2fe:	78 2e       	mov	r7, r24
     300:	b4 01       	movw	r22, r8
     302:	c6 01       	movw	r24, r12
     304:	0e 94 2a 01 	call	0x254	; 0x254 <max>
     308:	58 2e       	mov	r5, r24
     30a:	48 2e       	mov	r4, r24
     30c:	46 18       	sub	r4, r6
     30e:	b5 01       	movw	r22, r10
     310:	ce 01       	movw	r24, r28
     312:	0e 94 30 01 	call	0x260	; 0x260 <min>
     316:	38 2e       	mov	r3, r24
     318:	b5 01       	movw	r22, r10
     31a:	ce 01       	movw	r24, r28
     31c:	0e 94 2a 01 	call	0x254	; 0x254 <max>
     320:	75 01       	movw	r14, r10
     322:	ec 1a       	sub	r14, r28
     324:	fd 0a       	sbc	r15, r29
     326:	83 19       	sub	r24, r3
     328:	c8 14       	cp	r12, r8
     32a:	d9 04       	cpc	r13, r9
     32c:	19 f0       	breq	.+6      	; 0x334 <LCD_drawLine+0x68>
     32e:	e1 14       	cp	r14, r1
     330:	f1 04       	cpc	r15, r1
     332:	39 f4       	brne	.+14     	; 0x342 <LCD_drawLine+0x76>
     334:	2a 2d       	mov	r18, r10
     336:	48 2d       	mov	r20, r8
     338:	6c 2f       	mov	r22, r28
     33a:	8c 2d       	mov	r24, r12
     33c:	0e 94 36 01 	call	0x26c	; 0x26c <LCD_drawBlock>
     340:	32 c0       	rjmp	.+100    	; 0x3a6 <LCD_drawLine+0xda>
     342:	48 16       	cp	r4, r24
     344:	b0 f4       	brcc	.+44     	; 0x372 <LCD_drawLine+0xa6>
     346:	2d c0       	rjmp	.+90     	; 0x3a2 <LCD_drawLine+0xd6>
     348:	27 2d       	mov	r18, r7
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	26 19       	sub	r18, r6
     34e:	31 09       	sbc	r19, r1
     350:	e2 9e       	mul	r14, r18
     352:	c0 01       	movw	r24, r0
     354:	e3 9e       	mul	r14, r19
     356:	90 0d       	add	r25, r0
     358:	f2 9e       	mul	r15, r18
     35a:	90 0d       	add	r25, r0
     35c:	11 24       	eor	r1, r1
     35e:	64 2d       	mov	r22, r4
     360:	70 e0       	ldi	r23, 0x00	; 0
     362:	0e 94 f1 06 	call	0xde2	; 0xde2 <__divmodhi4>
     366:	6c 0f       	add	r22, r28
     368:	a8 01       	movw	r20, r16
     36a:	87 2d       	mov	r24, r7
     36c:	0e 94 b5 00 	call	0x16a	; 0x16a <LCD_drawPixel>
     370:	73 94       	inc	r7
     372:	57 14       	cp	r5, r7
     374:	48 f7       	brcc	.-46     	; 0x348 <LCD_drawLine+0x7c>
     376:	17 c0       	rjmp	.+46     	; 0x3a6 <LCD_drawLine+0xda>
     378:	27 2d       	mov	r18, r7
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	26 19       	sub	r18, r6
     37e:	31 09       	sbc	r19, r1
     380:	e2 9e       	mul	r14, r18
     382:	c0 01       	movw	r24, r0
     384:	e3 9e       	mul	r14, r19
     386:	90 0d       	add	r25, r0
     388:	f2 9e       	mul	r15, r18
     38a:	90 0d       	add	r25, r0
     38c:	11 24       	eor	r1, r1
     38e:	64 2d       	mov	r22, r4
     390:	70 e0       	ldi	r23, 0x00	; 0
     392:	0e 94 f1 06 	call	0xde2	; 0xde2 <__divmodhi4>
     396:	6c 0f       	add	r22, r28
     398:	a8 01       	movw	r20, r16
     39a:	87 2d       	mov	r24, r7
     39c:	0e 94 b5 00 	call	0x16a	; 0x16a <LCD_drawPixel>
     3a0:	73 94       	inc	r7
     3a2:	57 14       	cp	r5, r7
     3a4:	48 f7       	brcc	.-46     	; 0x378 <LCD_drawLine+0xac>
     3a6:	df 91       	pop	r29
     3a8:	cf 91       	pop	r28
     3aa:	1f 91       	pop	r17
     3ac:	0f 91       	pop	r16
     3ae:	ff 90       	pop	r15
     3b0:	ef 90       	pop	r14
     3b2:	df 90       	pop	r13
     3b4:	cf 90       	pop	r12
     3b6:	bf 90       	pop	r11
     3b8:	af 90       	pop	r10
     3ba:	9f 90       	pop	r9
     3bc:	8f 90       	pop	r8
     3be:	7f 90       	pop	r7
     3c0:	6f 90       	pop	r6
     3c2:	5f 90       	pop	r5
     3c4:	4f 90       	pop	r4
     3c6:	3f 90       	pop	r3
     3c8:	08 95       	ret

000003ca <LCD_setScreen>:
* @fn			void LCD_setScreen(uint16_t color)
* @brief		Draw the entire screen to a color
* @note
*****************************************************************************/
void LCD_setScreen(uint16_t color) 
{
     3ca:	0f 93       	push	r16
     3cc:	1f 93       	push	r17
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	8c 01       	movw	r16, r24
	
 	LCD_setAddr(0,0,LCD_WIDTH-1,LCD_HEIGHT-1);
     3d4:	2f e7       	ldi	r18, 0x7F	; 127
     3d6:	4f e9       	ldi	r20, 0x9F	; 159
     3d8:	60 e0       	ldi	r22, 0x00	; 0
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	0e 94 1e 04 	call	0x83c	; 0x83c <LCD_setAddr>
	 
 	for(int i = 0; i < LCD_WIDTH * LCD_HEIGHT; i++) {
     3e0:	c0 e0       	ldi	r28, 0x00	; 0
     3e2:	d0 e0       	ldi	r29, 0x00	; 0
     3e4:	04 c0       	rjmp	.+8      	; 0x3ee <LCD_setScreen+0x24>
		SPI_ControllerTx_16bit(color);
     3e6:	c8 01       	movw	r24, r16
     3e8:	0e 94 c0 03 	call	0x780	; 0x780 <SPI_ControllerTx_16bit>
void LCD_setScreen(uint16_t color) 
{
	
 	LCD_setAddr(0,0,LCD_WIDTH-1,LCD_HEIGHT-1);
	 
 	for(int i = 0; i < LCD_WIDTH * LCD_HEIGHT; i++) {
     3ec:	21 96       	adiw	r28, 0x01	; 1
     3ee:	c1 15       	cp	r28, r1
     3f0:	80 e5       	ldi	r24, 0x50	; 80
     3f2:	d8 07       	cpc	r29, r24
     3f4:	c4 f3       	brlt	.-16     	; 0x3e6 <LCD_setScreen+0x1c>
		SPI_ControllerTx_16bit(color);
	}


	
}
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	1f 91       	pop	r17
     3fc:	0f 91       	pop	r16
     3fe:	08 95       	ret

00000400 <LCD_drawString>:
* @fn			void LCD_drawString(uint8_t x, uint8_t y, char* str, uint16_t fg, uint16_t bg)
* @brief		Draw a string starting at the point with foreground and background colors
* @note
*****************************************************************************/
void LCD_drawString(uint8_t x, uint8_t y, char* str, uint16_t fg, uint16_t bg)
{
     400:	6f 92       	push	r6
     402:	7f 92       	push	r7
     404:	8f 92       	push	r8
     406:	9f 92       	push	r9
     408:	af 92       	push	r10
     40a:	bf 92       	push	r11
     40c:	cf 92       	push	r12
     40e:	df 92       	push	r13
     410:	ef 92       	push	r14
     412:	ff 92       	push	r15
     414:	0f 93       	push	r16
     416:	1f 93       	push	r17
     418:	cf 93       	push	r28
     41a:	df 93       	push	r29
     41c:	68 2e       	mov	r6, r24
     41e:	76 2e       	mov	r7, r22
     420:	4a 01       	movw	r8, r20
     422:	59 01       	movw	r10, r18
     424:	68 01       	movw	r12, r16
	// Fill this out
	int len = strlen(str);
     426:	fa 01       	movw	r30, r20
     428:	01 90       	ld	r0, Z+
     42a:	00 20       	and	r0, r0
     42c:	e9 f7       	brne	.-6      	; 0x428 <LCD_drawString+0x28>
     42e:	31 97       	sbiw	r30, 0x01	; 1
     430:	7f 01       	movw	r14, r30
     432:	e4 1a       	sub	r14, r20
     434:	f5 0a       	sbc	r15, r21
	for(int i = 0; i < len; i++) {
     436:	c0 e0       	ldi	r28, 0x00	; 0
     438:	d0 e0       	ldi	r29, 0x00	; 0
     43a:	10 c0       	rjmp	.+32     	; 0x45c <LCD_drawString+0x5c>
		LCD_drawChar(x + i*5,y,str[i], fg, bg); 
     43c:	f4 01       	movw	r30, r8
     43e:	ec 0f       	add	r30, r28
     440:	fd 1f       	adc	r31, r29
     442:	40 81       	ld	r20, Z
     444:	50 e0       	ldi	r21, 0x00	; 0
     446:	8c 2f       	mov	r24, r28
     448:	88 0f       	add	r24, r24
     44a:	88 0f       	add	r24, r24
     44c:	8c 0f       	add	r24, r28
     44e:	86 01       	movw	r16, r12
     450:	95 01       	movw	r18, r10
     452:	67 2d       	mov	r22, r7
     454:	86 0d       	add	r24, r6
     456:	0e 94 c2 00 	call	0x184	; 0x184 <LCD_drawChar>
*****************************************************************************/
void LCD_drawString(uint8_t x, uint8_t y, char* str, uint16_t fg, uint16_t bg)
{
	// Fill this out
	int len = strlen(str);
	for(int i = 0; i < len; i++) {
     45a:	21 96       	adiw	r28, 0x01	; 1
     45c:	ce 15       	cp	r28, r14
     45e:	df 05       	cpc	r29, r15
     460:	6c f3       	brlt	.-38     	; 0x43c <LCD_drawString+0x3c>
		LCD_drawChar(x + i*5,y,str[i], fg, bg); 
	}
     462:	df 91       	pop	r29
     464:	cf 91       	pop	r28
     466:	1f 91       	pop	r17
     468:	0f 91       	pop	r16
     46a:	ff 90       	pop	r15
     46c:	ef 90       	pop	r14
     46e:	df 90       	pop	r13
     470:	cf 90       	pop	r12
     472:	bf 90       	pop	r11
     474:	af 90       	pop	r10
     476:	9f 90       	pop	r9
     478:	8f 90       	pop	r8
     47a:	7f 90       	pop	r7
     47c:	6f 90       	pop	r6
     47e:	08 95       	ret

00000480 <Initialize>:
int isDisplay = 0; 

char intStringBuffer[10]; //buffer to hold the converted number
void Initialize()
{
	cli();
     480:	f8 94       	cli
	UART_init(BAUD_PRESCALER);
     482:	87 e6       	ldi	r24, 0x67	; 103
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	0e 94 88 00 	call	0x110	; 0x110 <UART_init>
	//Initialize output pins
	lcd_init();//initialize LCD
     48a:	0e 94 0e 04 	call	0x81c	; 0x81c <lcd_init>
	//clear the screen
	LCD_setScreen(BLACK);
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	0e 94 e5 01 	call	0x3ca	; 0x3ca <LCD_setScreen>
	sei();
     496:	78 94       	sei
     498:	08 95       	ret

0000049a <sweep>:
	

}

void sweep() {  
     49a:	8f 92       	push	r8
     49c:	9f 92       	push	r9
     49e:	af 92       	push	r10
     4a0:	bf 92       	push	r11
     4a2:	cf 92       	push	r12
     4a4:	df 92       	push	r13
     4a6:	ef 92       	push	r14
     4a8:	ff 92       	push	r15
     4aa:	0f 93       	push	r16
     4ac:	1f 93       	push	r17
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29

	oldx = x;
     4b2:	80 91 84 03 	lds	r24, 0x0384	; 0x800384 <x>
     4b6:	90 91 85 03 	lds	r25, 0x0385	; 0x800385 <x+0x1>
     4ba:	90 93 87 03 	sts	0x0387, r25	; 0x800387 <oldx+0x1>
     4be:	80 93 86 03 	sts	0x0386, r24	; 0x800386 <oldx>
	oldy = y; 
     4c2:	80 91 82 03 	lds	r24, 0x0382	; 0x800382 <y>
     4c6:	90 91 83 03 	lds	r25, 0x0383	; 0x800383 <y+0x1>
     4ca:	90 93 b3 03 	sts	0x03B3, r25	; 0x8003b3 <oldy+0x1>
     4ce:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <oldy>
	x = xcenter + r*cos((90-angle)* 3.1415926535 /180); 
     4d2:	00 91 80 03 	lds	r16, 0x0380	; 0x800380 <xcenter>
     4d6:	10 91 81 03 	lds	r17, 0x0381	; 0x800381 <xcenter+0x1>
     4da:	a0 90 00 01 	lds	r10, 0x0100	; 0x800100 <__data_start>
     4de:	b0 90 01 01 	lds	r11, 0x0101	; 0x800101 <__data_start+0x1>
     4e2:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <angle>
     4e6:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <angle+0x1>
     4ea:	ca e5       	ldi	r28, 0x5A	; 90
     4ec:	d0 e0       	ldi	r29, 0x00	; 0
     4ee:	be 01       	movw	r22, r28
     4f0:	68 1b       	sub	r22, r24
     4f2:	79 0b       	sbc	r23, r25
     4f4:	07 2e       	mov	r0, r23
     4f6:	00 0c       	add	r0, r0
     4f8:	88 0b       	sbc	r24, r24
     4fa:	99 0b       	sbc	r25, r25
     4fc:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatsisf>
     500:	2b ed       	ldi	r18, 0xDB	; 219
     502:	3f e0       	ldi	r19, 0x0F	; 15
     504:	49 e4       	ldi	r20, 0x49	; 73
     506:	50 e4       	ldi	r21, 0x40	; 64
     508:	0e 94 33 06 	call	0xc66	; 0xc66 <__mulsf3>
     50c:	20 e0       	ldi	r18, 0x00	; 0
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	44 e3       	ldi	r20, 0x34	; 52
     512:	53 e4       	ldi	r21, 0x43	; 67
     514:	0e 94 be 04 	call	0x97c	; 0x97c <__divsf3>
     518:	0e 94 b9 04 	call	0x972	; 0x972 <cos>
     51c:	6b 01       	movw	r12, r22
     51e:	7c 01       	movw	r14, r24
     520:	b5 01       	movw	r22, r10
     522:	bb 0c       	add	r11, r11
     524:	88 0b       	sbc	r24, r24
     526:	99 0b       	sbc	r25, r25
     528:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatsisf>
     52c:	a7 01       	movw	r20, r14
     52e:	96 01       	movw	r18, r12
     530:	0e 94 33 06 	call	0xc66	; 0xc66 <__mulsf3>
     534:	6b 01       	movw	r12, r22
     536:	7c 01       	movw	r14, r24
     538:	b8 01       	movw	r22, r16
     53a:	11 0f       	add	r17, r17
     53c:	88 0b       	sbc	r24, r24
     53e:	99 0b       	sbc	r25, r25
     540:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatsisf>
     544:	a7 01       	movw	r20, r14
     546:	96 01       	movw	r18, r12
     548:	0e 94 4d 04 	call	0x89a	; 0x89a <__addsf3>
     54c:	0e 94 30 05 	call	0xa60	; 0xa60 <__fixsfsi>
     550:	70 93 85 03 	sts	0x0385, r23	; 0x800385 <x+0x1>
     554:	60 93 84 03 	sts	0x0384, r22	; 0x800384 <x>
	y = ycenter + r*sin((90-angle)*  3.1415926535 /180); 
     558:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <ycenter>
     55c:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <ycenter+0x1>
     560:	e0 90 00 01 	lds	r14, 0x0100	; 0x800100 <__data_start>
     564:	f0 90 01 01 	lds	r15, 0x0101	; 0x800101 <__data_start+0x1>
     568:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <angle>
     56c:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <angle+0x1>
     570:	be 01       	movw	r22, r28
     572:	68 1b       	sub	r22, r24
     574:	79 0b       	sbc	r23, r25
     576:	07 2e       	mov	r0, r23
     578:	00 0c       	add	r0, r0
     57a:	88 0b       	sbc	r24, r24
     57c:	99 0b       	sbc	r25, r25
     57e:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatsisf>
     582:	2b ed       	ldi	r18, 0xDB	; 219
     584:	3f e0       	ldi	r19, 0x0F	; 15
     586:	49 e4       	ldi	r20, 0x49	; 73
     588:	50 e4       	ldi	r21, 0x40	; 64
     58a:	0e 94 33 06 	call	0xc66	; 0xc66 <__mulsf3>
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	44 e3       	ldi	r20, 0x34	; 52
     594:	53 e4       	ldi	r21, 0x43	; 67
     596:	0e 94 be 04 	call	0x97c	; 0x97c <__divsf3>
     59a:	0e 94 a0 06 	call	0xd40	; 0xd40 <sin>
     59e:	4b 01       	movw	r8, r22
     5a0:	5c 01       	movw	r10, r24
     5a2:	b7 01       	movw	r22, r14
     5a4:	ff 0c       	add	r15, r15
     5a6:	88 0b       	sbc	r24, r24
     5a8:	99 0b       	sbc	r25, r25
     5aa:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatsisf>
     5ae:	a5 01       	movw	r20, r10
     5b0:	94 01       	movw	r18, r8
     5b2:	0e 94 33 06 	call	0xc66	; 0xc66 <__mulsf3>
     5b6:	6b 01       	movw	r12, r22
     5b8:	7c 01       	movw	r14, r24
     5ba:	b8 01       	movw	r22, r16
     5bc:	11 0f       	add	r17, r17
     5be:	88 0b       	sbc	r24, r24
     5c0:	99 0b       	sbc	r25, r25
     5c2:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatsisf>
     5c6:	a7 01       	movw	r20, r14
     5c8:	96 01       	movw	r18, r12
     5ca:	0e 94 4d 04 	call	0x89a	; 0x89a <__addsf3>
     5ce:	0e 94 30 05 	call	0xa60	; 0xa60 <__fixsfsi>
     5d2:	70 93 83 03 	sts	0x0383, r23	; 0x800383 <y+0x1>
     5d6:	60 93 82 03 	sts	0x0382, r22	; 0x800382 <y>
	LCD_drawLine(xcenter,ycenter,oldx,oldy,BLACK);
     5da:	20 91 b2 03 	lds	r18, 0x03B2	; 0x8003b2 <oldy>
     5de:	30 91 b3 03 	lds	r19, 0x03B3	; 0x8003b3 <oldy+0x1>
     5e2:	40 91 86 03 	lds	r20, 0x0386	; 0x800386 <oldx>
     5e6:	50 91 87 03 	lds	r21, 0x0387	; 0x800387 <oldx+0x1>
     5ea:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <ycenter>
     5ee:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <ycenter+0x1>
     5f2:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <xcenter>
     5f6:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <xcenter+0x1>
     5fa:	00 e0       	ldi	r16, 0x00	; 0
     5fc:	10 e0       	ldi	r17, 0x00	; 0
     5fe:	0e 94 66 01 	call	0x2cc	; 0x2cc <LCD_drawLine>
	LCD_drawLine(xcenter,ycenter,x,y,GREEN);
     602:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <y>
     606:	30 91 83 03 	lds	r19, 0x0383	; 0x800383 <y+0x1>
     60a:	40 91 84 03 	lds	r20, 0x0384	; 0x800384 <x>
     60e:	50 91 85 03 	lds	r21, 0x0385	; 0x800385 <x+0x1>
     612:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <ycenter>
     616:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <ycenter+0x1>
     61a:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <xcenter>
     61e:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <xcenter+0x1>
     622:	00 ee       	ldi	r16, 0xE0	; 224
     624:	17 e0       	ldi	r17, 0x07	; 7
     626:	0e 94 66 01 	call	0x2cc	; 0x2cc <LCD_drawLine>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     62a:	2f e7       	ldi	r18, 0x7F	; 127
     62c:	88 e3       	ldi	r24, 0x38	; 56
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	21 50       	subi	r18, 0x01	; 1
     632:	80 40       	sbci	r24, 0x00	; 0
     634:	90 40       	sbci	r25, 0x00	; 0
     636:	e1 f7       	brne	.-8      	; 0x630 <sweep+0x196>
     638:	00 c0       	rjmp	.+0      	; 0x63a <sweep+0x1a0>
     63a:	00 00       	nop
	_delay_ms(25); 
}
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	1f 91       	pop	r17
     642:	0f 91       	pop	r16
     644:	ff 90       	pop	r15
     646:	ef 90       	pop	r14
     648:	df 90       	pop	r13
     64a:	cf 90       	pop	r12
     64c:	bf 90       	pop	r11
     64e:	af 90       	pop	r10
     650:	9f 90       	pop	r9
     652:	8f 90       	pop	r8
     654:	08 95       	ret

00000656 <main>:

int main(void)
{
	Initialize();
     656:	0e 94 40 02 	call	0x480	; 0x480 <Initialize>
	
	 while (1)
	 {
		 char received = UART_receive();
     65a:	0e 94 9e 00 	call	0x13c	; 0x13c <UART_receive>
     65e:	c8 2f       	mov	r28, r24
		 UART_send(received);
     660:	0e 94 97 00 	call	0x12e	; 0x12e <UART_send>
		 if(received == 'a') {
     664:	c1 36       	cpi	r28, 0x61	; 97
     666:	09 f0       	breq	.+2      	; 0x66a <main+0x14>
     668:	50 c0       	rjmp	.+160    	; 0x70a <main+0xb4>
     66a:	08 c0       	rjmp	.+16     	; 0x67c <main+0x26>
			 for(int i = 0; i < 3; i++) {
				 angleArr[i] = UART_receive();
     66c:	0e 94 9e 00 	call	0x13c	; 0x13c <UART_receive>
     670:	fe 01       	movw	r30, r28
     672:	ec 56       	subi	r30, 0x6C	; 108
     674:	fc 4f       	sbci	r31, 0xFC	; 252
     676:	80 83       	st	Z, r24
	 while (1)
	 {
		 char received = UART_receive();
		 UART_send(received);
		 if(received == 'a') {
			 for(int i = 0; i < 3; i++) {
     678:	21 96       	adiw	r28, 0x01	; 1
     67a:	02 c0       	rjmp	.+4      	; 0x680 <main+0x2a>
     67c:	c0 e0       	ldi	r28, 0x00	; 0
     67e:	d0 e0       	ldi	r29, 0x00	; 0
     680:	c3 30       	cpi	r28, 0x03	; 3
     682:	d1 05       	cpc	r29, r1
     684:	9c f3       	brlt	.-26     	; 0x66c <main+0x16>
				 angleArr[i] = UART_receive();
			 }
			 
			 //if(isDisplay %2 == 0) {
				 		
				 angle = atoi(angleArr); 
     686:	84 e9       	ldi	r24, 0x94	; 148
     688:	93 e0       	ldi	r25, 0x03	; 3
     68a:	0e 94 19 07 	call	0xe32	; 0xe32 <atoi>
     68e:	90 93 93 03 	sts	0x0393, r25	; 0x800393 <angle+0x1>
     692:	80 93 92 03 	sts	0x0392, r24	; 0x800392 <angle>
				 sprintf(String, "angle: %03d\n", angle);
     696:	80 91 92 03 	lds	r24, 0x0392	; 0x800392 <angle>
     69a:	90 91 93 03 	lds	r25, 0x0393	; 0x800393 <angle+0x1>
     69e:	9f 93       	push	r25
     6a0:	8f 93       	push	r24
     6a2:	89 e6       	ldi	r24, 0x69	; 105
     6a4:	93 e0       	ldi	r25, 0x03	; 3
     6a6:	9f 93       	push	r25
     6a8:	8f 93       	push	r24
     6aa:	89 e9       	ldi	r24, 0x99	; 153
     6ac:	93 e0       	ldi	r25, 0x03	; 3
     6ae:	9f 93       	push	r25
     6b0:	8f 93       	push	r24
     6b2:	0e 94 3f 07 	call	0xe7e	; 0xe7e <sprintf>
				 UART_putstring(String);
     6b6:	89 e9       	ldi	r24, 0x99	; 153
     6b8:	93 e0       	ldi	r25, 0x03	; 3
     6ba:	0e 94 a8 00 	call	0x150	; 0x150 <UART_putstring>
		
				//_delay_ms(800);
				LCD_drawBlock(100, 100, 150, 120, BLACK); 
     6be:	00 e0       	ldi	r16, 0x00	; 0
     6c0:	10 e0       	ldi	r17, 0x00	; 0
     6c2:	28 e7       	ldi	r18, 0x78	; 120
     6c4:	46 e9       	ldi	r20, 0x96	; 150
     6c6:	64 e6       	ldi	r22, 0x64	; 100
     6c8:	84 e6       	ldi	r24, 0x64	; 100
     6ca:	0e 94 36 01 	call	0x26c	; 0x26c <LCD_drawBlock>
				 LCD_drawString(10,10,angleArr,WHITE,BLACK);
     6ce:	2f ef       	ldi	r18, 0xFF	; 255
     6d0:	3f ef       	ldi	r19, 0xFF	; 255
     6d2:	44 e9       	ldi	r20, 0x94	; 148
     6d4:	53 e0       	ldi	r21, 0x03	; 3
     6d6:	6a e0       	ldi	r22, 0x0A	; 10
     6d8:	8a e0       	ldi	r24, 0x0A	; 10
     6da:	0e 94 00 02 	call	0x400	; 0x400 <LCD_drawString>
				 
				 UART_putstring(angleArr); 
     6de:	84 e9       	ldi	r24, 0x94	; 148
     6e0:	93 e0       	ldi	r25, 0x03	; 3
     6e2:	0e 94 a8 00 	call	0x150	; 0x150 <UART_putstring>
				 //_delay_ms(150);
				 isDisplay++; 
     6e6:	80 91 7e 03 	lds	r24, 0x037E	; 0x80037e <__data_end>
     6ea:	90 91 7f 03 	lds	r25, 0x037F	; 0x80037f <__data_end+0x1>
     6ee:	01 96       	adiw	r24, 0x01	; 1
     6f0:	90 93 7f 03 	sts	0x037F, r25	; 0x80037f <__data_end+0x1>
     6f4:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <__data_end>
				 sweep();
     6f8:	0e 94 4d 02 	call	0x49a	; 0x49a <sweep>
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	0f 90       	pop	r0
     706:	0f 90       	pop	r0
     708:	a8 cf       	rjmp	.-176    	; 0x65a <main+0x4>
				 
			 //}
		
		 }
		 else {
			  LCD_drawString(100,100,"waiting",WHITE,BLACK);
     70a:	00 e0       	ldi	r16, 0x00	; 0
     70c:	10 e0       	ldi	r17, 0x00	; 0
     70e:	2f ef       	ldi	r18, 0xFF	; 255
     710:	3f ef       	ldi	r19, 0xFF	; 255
     712:	46 e7       	ldi	r20, 0x76	; 118
     714:	53 e0       	ldi	r21, 0x03	; 3
     716:	64 e6       	ldi	r22, 0x64	; 100
     718:	84 e6       	ldi	r24, 0x64	; 100
     71a:	0e 94 00 02 	call	0x400	; 0x400 <LCD_drawString>
     71e:	9d cf       	rjmp	.-198    	; 0x65a <main+0x4>

00000720 <SPI_Controller_Init>:

	SPDR0 = temp;		//Place data to be sent on registers
	while(!(SPSR0 & (1<<SPIF)));	//wait for end of transmission
	SPDR0 = data;		//Place data to be sent on registers
	while(!(SPSR0 & (1<<SPIF)));	//wait for end of transmission
}
     720:	80 e5       	ldi	r24, 0x50	; 80
     722:	8c bd       	out	0x2c, r24	; 44
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	8d bd       	out	0x2d, r24	; 45
     728:	08 95       	ret

0000072a <lcd_pin_init>:
     72a:	84 b1       	in	r24, 0x04	; 4
     72c:	8f 62       	ori	r24, 0x2F	; 47
     72e:	84 b9       	out	0x04, r24	; 4
     730:	8a b1       	in	r24, 0x0a	; 10
     732:	80 64       	ori	r24, 0x40	; 64
     734:	8a b9       	out	0x0a, r24	; 10
     736:	84 b5       	in	r24, 0x24	; 36
     738:	83 68       	ori	r24, 0x83	; 131
     73a:	84 bd       	out	0x24, r24	; 36
     73c:	85 b5       	in	r24, 0x25	; 37
     73e:	84 60       	ori	r24, 0x04	; 4
     740:	85 bd       	out	0x25, r24	; 37
     742:	8f e7       	ldi	r24, 0x7F	; 127
     744:	87 bd       	out	0x27, r24	; 39
     746:	83 ed       	ldi	r24, 0xD3	; 211
     748:	90 e3       	ldi	r25, 0x30	; 48
     74a:	01 97       	sbiw	r24, 0x01	; 1
     74c:	f1 f7       	brne	.-4      	; 0x74a <lcd_pin_init+0x20>
     74e:	00 c0       	rjmp	.+0      	; 0x750 <lcd_pin_init+0x26>
     750:	00 00       	nop
     752:	85 b1       	in	r24, 0x05	; 5
     754:	82 60       	ori	r24, 0x02	; 2
     756:	85 b9       	out	0x05, r24	; 5
     758:	08 95       	ret

0000075a <Delay_ms>:
     75a:	07 c0       	rjmp	.+14     	; 0x76a <Delay_ms+0x10>
     75c:	89 ef       	ldi	r24, 0xF9	; 249
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <Delay_ms+0x6>
     764:	00 c0       	rjmp	.+0      	; 0x766 <Delay_ms+0xc>
     766:	00 00       	nop
     768:	c9 01       	movw	r24, r18
     76a:	9c 01       	movw	r18, r24
     76c:	21 50       	subi	r18, 0x01	; 1
     76e:	31 09       	sbc	r19, r1
     770:	89 2b       	or	r24, r25
     772:	a1 f7       	brne	.-24     	; 0x75c <Delay_ms+0x2>
     774:	08 95       	ret

00000776 <SPI_ControllerTx_stream>:
     776:	8e bd       	out	0x2e, r24	; 46
     778:	0d b4       	in	r0, 0x2d	; 45
     77a:	07 fe       	sbrs	r0, 7
     77c:	fd cf       	rjmp	.-6      	; 0x778 <SPI_ControllerTx_stream+0x2>
     77e:	08 95       	ret

00000780 <SPI_ControllerTx_16bit>:
     780:	25 b1       	in	r18, 0x05	; 5
     782:	2b 7f       	andi	r18, 0xFB	; 251
     784:	25 b9       	out	0x05, r18	; 5
     786:	9e bd       	out	0x2e, r25	; 46
     788:	0d b4       	in	r0, 0x2d	; 45
     78a:	07 fe       	sbrs	r0, 7
     78c:	fd cf       	rjmp	.-6      	; 0x788 <SPI_ControllerTx_16bit+0x8>
     78e:	8e bd       	out	0x2e, r24	; 46
     790:	0d b4       	in	r0, 0x2d	; 45
     792:	07 fe       	sbrs	r0, 7
     794:	fd cf       	rjmp	.-6      	; 0x790 <SPI_ControllerTx_16bit+0x10>
     796:	85 b1       	in	r24, 0x05	; 5
     798:	84 60       	ori	r24, 0x04	; 4
     79a:	85 b9       	out	0x05, r24	; 5
     79c:	08 95       	ret

0000079e <sendCommands>:
* @fn			void sendCommands (const uint8_t *cmds, uint8_t length)
* @brief		Parse and send array of commands thru SPI
* @note
*****************************************************************************/
void sendCommands (const uint8_t *cmds, uint8_t length)
{
     79e:	ff 92       	push	r15
     7a0:	0f 93       	push	r16
     7a2:	1f 93       	push	r17
     7a4:	cf 93       	push	r28
     7a6:	df 93       	push	r29
     7a8:	ec 01       	movw	r28, r24
	//Command Code, # of data bytes, data bytes (if any), delay in ms
	uint8_t numCommands, numData, waitTime;

	numCommands = length;	// # of commands to send

	clear(LCD_PORT, LCD_TFT_CS);	//CS pulled low to start communication
     7aa:	85 b1       	in	r24, 0x05	; 5
     7ac:	8b 7f       	andi	r24, 0xFB	; 251
     7ae:	85 b9       	out	0x05, r24	; 5

	while (numCommands--)	// Send each command
     7b0:	27 c0       	rjmp	.+78     	; 0x800 <__DATA_REGION_LENGTH__>
	{
		clear(LCD_PORT, LCD_DC);	//D/C pulled low for command
     7b2:	85 b1       	in	r24, 0x05	; 5
     7b4:	8e 7f       	andi	r24, 0xFE	; 254
     7b6:	85 b9       	out	0x05, r24	; 5
		
		SPI_ControllerTx_stream(*cmds++);
     7b8:	88 81       	ld	r24, Y
     7ba:	0e 94 bb 03 	call	0x776	; 0x776 <SPI_ControllerTx_stream>
		
		numData = *cmds++;	// # of data bytes to send
     7be:	fe 01       	movw	r30, r28
     7c0:	32 96       	adiw	r30, 0x02	; 2
     7c2:	89 81       	ldd	r24, Y+1	; 0x01

		set(LCD_PORT, LCD_DC);	//D/C set high for data
     7c4:	95 b1       	in	r25, 0x05	; 5
     7c6:	91 60       	ori	r25, 0x01	; 1
     7c8:	95 b9       	out	0x05, r25	; 5
		while (numData--)	// Send each data byte...
     7ca:	08 c0       	rjmp	.+16     	; 0x7dc <sendCommands+0x3e>
		{
			SPI_ControllerTx_stream(*cmds++);
     7cc:	8f 01       	movw	r16, r30
     7ce:	0f 5f       	subi	r16, 0xFF	; 255
     7d0:	1f 4f       	sbci	r17, 0xFF	; 255
     7d2:	80 81       	ld	r24, Z
     7d4:	0e 94 bb 03 	call	0x776	; 0x776 <SPI_ControllerTx_stream>
		SPI_ControllerTx_stream(*cmds++);
		
		numData = *cmds++;	// # of data bytes to send

		set(LCD_PORT, LCD_DC);	//D/C set high for data
		while (numData--)	// Send each data byte...
     7d8:	8c 2f       	mov	r24, r28
		{
			SPI_ControllerTx_stream(*cmds++);
     7da:	f8 01       	movw	r30, r16
		SPI_ControllerTx_stream(*cmds++);
		
		numData = *cmds++;	// # of data bytes to send

		set(LCD_PORT, LCD_DC);	//D/C set high for data
		while (numData--)	// Send each data byte...
     7dc:	cf ef       	ldi	r28, 0xFF	; 255
     7de:	c8 0f       	add	r28, r24
     7e0:	81 11       	cpse	r24, r1
     7e2:	f4 cf       	rjmp	.-24     	; 0x7cc <sendCommands+0x2e>
		{
			SPI_ControllerTx_stream(*cmds++);
			
		}

		waitTime = *cmds++;     // Read post-command delay time (ms)
     7e4:	ef 01       	movw	r28, r30
     7e6:	21 96       	adiw	r28, 0x01	; 1
     7e8:	80 81       	ld	r24, Z
		if (waitTime!=0)
     7ea:	88 23       	and	r24, r24
     7ec:	41 f0       	breq	.+16     	; 0x7fe <sendCommands+0x60>
		{
			Delay_ms((waitTime==255 ? 500 : waitTime));
     7ee:	8f 3f       	cpi	r24, 0xFF	; 255
     7f0:	11 f0       	breq	.+4      	; 0x7f6 <sendCommands+0x58>
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	02 c0       	rjmp	.+4      	; 0x7fa <sendCommands+0x5c>
     7f6:	84 ef       	ldi	r24, 0xF4	; 244
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	0e 94 ad 03 	call	0x75a	; 0x75a <Delay_ms>
     7fe:	6f 2d       	mov	r22, r15

	numCommands = length;	// # of commands to send

	clear(LCD_PORT, LCD_TFT_CS);	//CS pulled low to start communication

	while (numCommands--)	// Send each command
     800:	ff 24       	eor	r15, r15
     802:	fa 94       	dec	r15
     804:	f6 0e       	add	r15, r22
     806:	61 11       	cpse	r22, r1
     808:	d4 cf       	rjmp	.-88     	; 0x7b2 <sendCommands+0x14>
		{
			Delay_ms((waitTime==255 ? 500 : waitTime));
		}
	}

	set(LCD_PORT, LCD_TFT_CS);	//set CS to high
     80a:	85 b1       	in	r24, 0x05	; 5
     80c:	84 60       	ori	r24, 0x04	; 4
     80e:	85 b9       	out	0x05, r24	; 5
}
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	08 95       	ret

0000081c <lcd_init>:
* @brief		Initialize LCD settings
* @note
*****************************************************************************/
void lcd_init(void)
{
	lcd_pin_init();
     81c:	0e 94 95 03 	call	0x72a	; 0x72a <lcd_pin_init>
	SPI_Controller_Init();
     820:	0e 94 90 03 	call	0x720	; 0x720 <SPI_Controller_Init>
     824:	81 ee       	ldi	r24, 0xE1	; 225
     826:	94 e0       	ldi	r25, 0x04	; 4
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	f1 f7       	brne	.-4      	; 0x828 <lcd_init+0xc>
     82c:	00 c0       	rjmp	.+0      	; 0x82e <lcd_init+0x12>
     82e:	00 00       	nop
		ST7735_NORON, 0, 10,	//Normal display on
		ST7735_DISPON, 0, 100,            // Set display on
		ST7735_MADCTL, 1, MADCTL_MX | MADCTL_MV | MADCTL_RGB, 10		//Default to rotation 3
	};

	sendCommands(ST7735_cmds, 22);
     830:	66 e1       	ldi	r22, 0x16	; 22
     832:	84 e0       	ldi	r24, 0x04	; 4
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	0e 94 cf 03 	call	0x79e	; 0x79e <sendCommands>
     83a:	08 95       	ret

0000083c <LCD_setAddr>:
* @fn			void LCD_setAddr(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1)
* @brief		Set pixel memory address to write to
* @note
*****************************************************************************/
void LCD_setAddr(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1)
{
     83c:	cf 93       	push	r28
     83e:	df 93       	push	r29
     840:	cd b7       	in	r28, 0x3d	; 61
     842:	de b7       	in	r29, 0x3e	; 62
     844:	61 97       	sbiw	r28, 0x11	; 17
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	f8 94       	cli
     84a:	de bf       	out	0x3e, r29	; 62
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	cd bf       	out	0x3d, r28	; 61
	uint8_t ST7735_cmds[]  =
     850:	9a e2       	ldi	r25, 0x2A	; 42
     852:	99 83       	std	Y+1, r25	; 0x01
     854:	94 e0       	ldi	r25, 0x04	; 4
     856:	9a 83       	std	Y+2, r25	; 0x02
     858:	1b 82       	std	Y+3, r1	; 0x03
     85a:	8c 83       	std	Y+4, r24	; 0x04
     85c:	1d 82       	std	Y+5, r1	; 0x05
     85e:	4e 83       	std	Y+6, r20	; 0x06
     860:	1f 82       	std	Y+7, r1	; 0x07
     862:	8b e2       	ldi	r24, 0x2B	; 43
     864:	88 87       	std	Y+8, r24	; 0x08
     866:	99 87       	std	Y+9, r25	; 0x09
     868:	1a 86       	std	Y+10, r1	; 0x0a
     86a:	6b 87       	std	Y+11, r22	; 0x0b
     86c:	1c 86       	std	Y+12, r1	; 0x0c
     86e:	2d 87       	std	Y+13, r18	; 0x0d
     870:	1e 86       	std	Y+14, r1	; 0x0e
     872:	8c e2       	ldi	r24, 0x2C	; 44
     874:	8f 87       	std	Y+15, r24	; 0x0f
     876:	18 8a       	std	Y+16, r1	; 0x10
     878:	85 e0       	ldi	r24, 0x05	; 5
     87a:	89 8b       	std	Y+17, r24	; 0x11
	{
		ST7735_CASET, 4, 0x00, x0, 0x00, x1, 0,		// Column
		ST7735_RASET, 4, 0x00, y0, 0x00, y1, 0,		// Page
		ST7735_RAMWR, 0, 5				// Into RAM
	};
	sendCommands(ST7735_cmds, 3);
     87c:	63 e0       	ldi	r22, 0x03	; 3
     87e:	ce 01       	movw	r24, r28
     880:	01 96       	adiw	r24, 0x01	; 1
     882:	0e 94 cf 03 	call	0x79e	; 0x79e <sendCommands>
}
     886:	61 96       	adiw	r28, 0x11	; 17
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	de bf       	out	0x3e, r29	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	cd bf       	out	0x3d, r28	; 61
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <__subsf3>:
     898:	50 58       	subi	r21, 0x80	; 128

0000089a <__addsf3>:
     89a:	bb 27       	eor	r27, r27
     89c:	aa 27       	eor	r26, r26
     89e:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__addsf3x>
     8a2:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_round>
     8a6:	0e 94 ac 05 	call	0xb58	; 0xb58 <__fp_pscA>
     8aa:	38 f0       	brcs	.+14     	; 0x8ba <__addsf3+0x20>
     8ac:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fp_pscB>
     8b0:	20 f0       	brcs	.+8      	; 0x8ba <__addsf3+0x20>
     8b2:	39 f4       	brne	.+14     	; 0x8c2 <__addsf3+0x28>
     8b4:	9f 3f       	cpi	r25, 0xFF	; 255
     8b6:	19 f4       	brne	.+6      	; 0x8be <__addsf3+0x24>
     8b8:	26 f4       	brtc	.+8      	; 0x8c2 <__addsf3+0x28>
     8ba:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_nan>
     8be:	0e f4       	brtc	.+2      	; 0x8c2 <__addsf3+0x28>
     8c0:	e0 95       	com	r30
     8c2:	e7 fb       	bst	r30, 7
     8c4:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_inf>

000008c8 <__addsf3x>:
     8c8:	e9 2f       	mov	r30, r25
     8ca:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fp_split3>
     8ce:	58 f3       	brcs	.-42     	; 0x8a6 <__addsf3+0xc>
     8d0:	ba 17       	cp	r27, r26
     8d2:	62 07       	cpc	r22, r18
     8d4:	73 07       	cpc	r23, r19
     8d6:	84 07       	cpc	r24, r20
     8d8:	95 07       	cpc	r25, r21
     8da:	20 f0       	brcs	.+8      	; 0x8e4 <__addsf3x+0x1c>
     8dc:	79 f4       	brne	.+30     	; 0x8fc <__addsf3x+0x34>
     8de:	a6 f5       	brtc	.+104    	; 0x948 <__stack+0x49>
     8e0:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_zero>
     8e4:	0e f4       	brtc	.+2      	; 0x8e8 <__addsf3x+0x20>
     8e6:	e0 95       	com	r30
     8e8:	0b 2e       	mov	r0, r27
     8ea:	ba 2f       	mov	r27, r26
     8ec:	a0 2d       	mov	r26, r0
     8ee:	0b 01       	movw	r0, r22
     8f0:	b9 01       	movw	r22, r18
     8f2:	90 01       	movw	r18, r0
     8f4:	0c 01       	movw	r0, r24
     8f6:	ca 01       	movw	r24, r20
     8f8:	a0 01       	movw	r20, r0
     8fa:	11 24       	eor	r1, r1
     8fc:	ff 27       	eor	r31, r31
     8fe:	59 1b       	sub	r21, r25
     900:	99 f0       	breq	.+38     	; 0x928 <__stack+0x29>
     902:	59 3f       	cpi	r21, 0xF9	; 249
     904:	50 f4       	brcc	.+20     	; 0x91a <__stack+0x1b>
     906:	50 3e       	cpi	r21, 0xE0	; 224
     908:	68 f1       	brcs	.+90     	; 0x964 <__stack+0x65>
     90a:	1a 16       	cp	r1, r26
     90c:	f0 40       	sbci	r31, 0x00	; 0
     90e:	a2 2f       	mov	r26, r18
     910:	23 2f       	mov	r18, r19
     912:	34 2f       	mov	r19, r20
     914:	44 27       	eor	r20, r20
     916:	58 5f       	subi	r21, 0xF8	; 248
     918:	f3 cf       	rjmp	.-26     	; 0x900 <__stack+0x1>
     91a:	46 95       	lsr	r20
     91c:	37 95       	ror	r19
     91e:	27 95       	ror	r18
     920:	a7 95       	ror	r26
     922:	f0 40       	sbci	r31, 0x00	; 0
     924:	53 95       	inc	r21
     926:	c9 f7       	brne	.-14     	; 0x91a <__stack+0x1b>
     928:	7e f4       	brtc	.+30     	; 0x948 <__stack+0x49>
     92a:	1f 16       	cp	r1, r31
     92c:	ba 0b       	sbc	r27, r26
     92e:	62 0b       	sbc	r22, r18
     930:	73 0b       	sbc	r23, r19
     932:	84 0b       	sbc	r24, r20
     934:	ba f0       	brmi	.+46     	; 0x964 <__stack+0x65>
     936:	91 50       	subi	r25, 0x01	; 1
     938:	a1 f0       	breq	.+40     	; 0x962 <__stack+0x63>
     93a:	ff 0f       	add	r31, r31
     93c:	bb 1f       	adc	r27, r27
     93e:	66 1f       	adc	r22, r22
     940:	77 1f       	adc	r23, r23
     942:	88 1f       	adc	r24, r24
     944:	c2 f7       	brpl	.-16     	; 0x936 <__stack+0x37>
     946:	0e c0       	rjmp	.+28     	; 0x964 <__stack+0x65>
     948:	ba 0f       	add	r27, r26
     94a:	62 1f       	adc	r22, r18
     94c:	73 1f       	adc	r23, r19
     94e:	84 1f       	adc	r24, r20
     950:	48 f4       	brcc	.+18     	; 0x964 <__stack+0x65>
     952:	87 95       	ror	r24
     954:	77 95       	ror	r23
     956:	67 95       	ror	r22
     958:	b7 95       	ror	r27
     95a:	f7 95       	ror	r31
     95c:	9e 3f       	cpi	r25, 0xFE	; 254
     95e:	08 f0       	brcs	.+2      	; 0x962 <__stack+0x63>
     960:	b0 cf       	rjmp	.-160    	; 0x8c2 <__addsf3+0x28>
     962:	93 95       	inc	r25
     964:	88 0f       	add	r24, r24
     966:	08 f0       	brcs	.+2      	; 0x96a <__stack+0x6b>
     968:	99 27       	eor	r25, r25
     96a:	ee 0f       	add	r30, r30
     96c:	97 95       	ror	r25
     96e:	87 95       	ror	r24
     970:	08 95       	ret

00000972 <cos>:
     972:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_rempio2>
     976:	e3 95       	inc	r30
     978:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_sinus>

0000097c <__divsf3>:
     97c:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__divsf3x>
     980:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_round>
     984:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fp_pscB>
     988:	58 f0       	brcs	.+22     	; 0x9a0 <__divsf3+0x24>
     98a:	0e 94 ac 05 	call	0xb58	; 0xb58 <__fp_pscA>
     98e:	40 f0       	brcs	.+16     	; 0x9a0 <__divsf3+0x24>
     990:	29 f4       	brne	.+10     	; 0x99c <__divsf3+0x20>
     992:	5f 3f       	cpi	r21, 0xFF	; 255
     994:	29 f0       	breq	.+10     	; 0x9a0 <__divsf3+0x24>
     996:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_inf>
     99a:	51 11       	cpse	r21, r1
     99c:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__fp_szero>
     9a0:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_nan>

000009a4 <__divsf3x>:
     9a4:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fp_split3>
     9a8:	68 f3       	brcs	.-38     	; 0x984 <__divsf3+0x8>

000009aa <__divsf3_pse>:
     9aa:	99 23       	and	r25, r25
     9ac:	b1 f3       	breq	.-20     	; 0x99a <__divsf3+0x1e>
     9ae:	55 23       	and	r21, r21
     9b0:	91 f3       	breq	.-28     	; 0x996 <__divsf3+0x1a>
     9b2:	95 1b       	sub	r25, r21
     9b4:	55 0b       	sbc	r21, r21
     9b6:	bb 27       	eor	r27, r27
     9b8:	aa 27       	eor	r26, r26
     9ba:	62 17       	cp	r22, r18
     9bc:	73 07       	cpc	r23, r19
     9be:	84 07       	cpc	r24, r20
     9c0:	38 f0       	brcs	.+14     	; 0x9d0 <__divsf3_pse+0x26>
     9c2:	9f 5f       	subi	r25, 0xFF	; 255
     9c4:	5f 4f       	sbci	r21, 0xFF	; 255
     9c6:	22 0f       	add	r18, r18
     9c8:	33 1f       	adc	r19, r19
     9ca:	44 1f       	adc	r20, r20
     9cc:	aa 1f       	adc	r26, r26
     9ce:	a9 f3       	breq	.-22     	; 0x9ba <__divsf3_pse+0x10>
     9d0:	35 d0       	rcall	.+106    	; 0xa3c <__divsf3_pse+0x92>
     9d2:	0e 2e       	mov	r0, r30
     9d4:	3a f0       	brmi	.+14     	; 0x9e4 <__divsf3_pse+0x3a>
     9d6:	e0 e8       	ldi	r30, 0x80	; 128
     9d8:	32 d0       	rcall	.+100    	; 0xa3e <__divsf3_pse+0x94>
     9da:	91 50       	subi	r25, 0x01	; 1
     9dc:	50 40       	sbci	r21, 0x00	; 0
     9de:	e6 95       	lsr	r30
     9e0:	00 1c       	adc	r0, r0
     9e2:	ca f7       	brpl	.-14     	; 0x9d6 <__divsf3_pse+0x2c>
     9e4:	2b d0       	rcall	.+86     	; 0xa3c <__divsf3_pse+0x92>
     9e6:	fe 2f       	mov	r31, r30
     9e8:	29 d0       	rcall	.+82     	; 0xa3c <__divsf3_pse+0x92>
     9ea:	66 0f       	add	r22, r22
     9ec:	77 1f       	adc	r23, r23
     9ee:	88 1f       	adc	r24, r24
     9f0:	bb 1f       	adc	r27, r27
     9f2:	26 17       	cp	r18, r22
     9f4:	37 07       	cpc	r19, r23
     9f6:	48 07       	cpc	r20, r24
     9f8:	ab 07       	cpc	r26, r27
     9fa:	b0 e8       	ldi	r27, 0x80	; 128
     9fc:	09 f0       	breq	.+2      	; 0xa00 <__divsf3_pse+0x56>
     9fe:	bb 0b       	sbc	r27, r27
     a00:	80 2d       	mov	r24, r0
     a02:	bf 01       	movw	r22, r30
     a04:	ff 27       	eor	r31, r31
     a06:	93 58       	subi	r25, 0x83	; 131
     a08:	5f 4f       	sbci	r21, 0xFF	; 255
     a0a:	3a f0       	brmi	.+14     	; 0xa1a <__divsf3_pse+0x70>
     a0c:	9e 3f       	cpi	r25, 0xFE	; 254
     a0e:	51 05       	cpc	r21, r1
     a10:	78 f0       	brcs	.+30     	; 0xa30 <__divsf3_pse+0x86>
     a12:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_inf>
     a16:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__fp_szero>
     a1a:	5f 3f       	cpi	r21, 0xFF	; 255
     a1c:	e4 f3       	brlt	.-8      	; 0xa16 <__divsf3_pse+0x6c>
     a1e:	98 3e       	cpi	r25, 0xE8	; 232
     a20:	d4 f3       	brlt	.-12     	; 0xa16 <__divsf3_pse+0x6c>
     a22:	86 95       	lsr	r24
     a24:	77 95       	ror	r23
     a26:	67 95       	ror	r22
     a28:	b7 95       	ror	r27
     a2a:	f7 95       	ror	r31
     a2c:	9f 5f       	subi	r25, 0xFF	; 255
     a2e:	c9 f7       	brne	.-14     	; 0xa22 <__divsf3_pse+0x78>
     a30:	88 0f       	add	r24, r24
     a32:	91 1d       	adc	r25, r1
     a34:	96 95       	lsr	r25
     a36:	87 95       	ror	r24
     a38:	97 f9       	bld	r25, 7
     a3a:	08 95       	ret
     a3c:	e1 e0       	ldi	r30, 0x01	; 1
     a3e:	66 0f       	add	r22, r22
     a40:	77 1f       	adc	r23, r23
     a42:	88 1f       	adc	r24, r24
     a44:	bb 1f       	adc	r27, r27
     a46:	62 17       	cp	r22, r18
     a48:	73 07       	cpc	r23, r19
     a4a:	84 07       	cpc	r24, r20
     a4c:	ba 07       	cpc	r27, r26
     a4e:	20 f0       	brcs	.+8      	; 0xa58 <__divsf3_pse+0xae>
     a50:	62 1b       	sub	r22, r18
     a52:	73 0b       	sbc	r23, r19
     a54:	84 0b       	sbc	r24, r20
     a56:	ba 0b       	sbc	r27, r26
     a58:	ee 1f       	adc	r30, r30
     a5a:	88 f7       	brcc	.-30     	; 0xa3e <__divsf3_pse+0x94>
     a5c:	e0 95       	com	r30
     a5e:	08 95       	ret

00000a60 <__fixsfsi>:
     a60:	0e 94 37 05 	call	0xa6e	; 0xa6e <__fixunssfsi>
     a64:	68 94       	set
     a66:	b1 11       	cpse	r27, r1
     a68:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__fp_szero>
     a6c:	08 95       	ret

00000a6e <__fixunssfsi>:
     a6e:	0e 94 12 06 	call	0xc24	; 0xc24 <__fp_splitA>
     a72:	88 f0       	brcs	.+34     	; 0xa96 <__fixunssfsi+0x28>
     a74:	9f 57       	subi	r25, 0x7F	; 127
     a76:	98 f0       	brcs	.+38     	; 0xa9e <__fixunssfsi+0x30>
     a78:	b9 2f       	mov	r27, r25
     a7a:	99 27       	eor	r25, r25
     a7c:	b7 51       	subi	r27, 0x17	; 23
     a7e:	b0 f0       	brcs	.+44     	; 0xaac <__fixunssfsi+0x3e>
     a80:	e1 f0       	breq	.+56     	; 0xaba <__fixunssfsi+0x4c>
     a82:	66 0f       	add	r22, r22
     a84:	77 1f       	adc	r23, r23
     a86:	88 1f       	adc	r24, r24
     a88:	99 1f       	adc	r25, r25
     a8a:	1a f0       	brmi	.+6      	; 0xa92 <__fixunssfsi+0x24>
     a8c:	ba 95       	dec	r27
     a8e:	c9 f7       	brne	.-14     	; 0xa82 <__fixunssfsi+0x14>
     a90:	14 c0       	rjmp	.+40     	; 0xaba <__fixunssfsi+0x4c>
     a92:	b1 30       	cpi	r27, 0x01	; 1
     a94:	91 f0       	breq	.+36     	; 0xaba <__fixunssfsi+0x4c>
     a96:	0e 94 2c 06 	call	0xc58	; 0xc58 <__fp_zero>
     a9a:	b1 e0       	ldi	r27, 0x01	; 1
     a9c:	08 95       	ret
     a9e:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_zero>
     aa2:	67 2f       	mov	r22, r23
     aa4:	78 2f       	mov	r23, r24
     aa6:	88 27       	eor	r24, r24
     aa8:	b8 5f       	subi	r27, 0xF8	; 248
     aaa:	39 f0       	breq	.+14     	; 0xaba <__fixunssfsi+0x4c>
     aac:	b9 3f       	cpi	r27, 0xF9	; 249
     aae:	cc f3       	brlt	.-14     	; 0xaa2 <__fixunssfsi+0x34>
     ab0:	86 95       	lsr	r24
     ab2:	77 95       	ror	r23
     ab4:	67 95       	ror	r22
     ab6:	b3 95       	inc	r27
     ab8:	d9 f7       	brne	.-10     	; 0xab0 <__fixunssfsi+0x42>
     aba:	3e f4       	brtc	.+14     	; 0xaca <__fixunssfsi+0x5c>
     abc:	90 95       	com	r25
     abe:	80 95       	com	r24
     ac0:	70 95       	com	r23
     ac2:	61 95       	neg	r22
     ac4:	7f 4f       	sbci	r23, 0xFF	; 255
     ac6:	8f 4f       	sbci	r24, 0xFF	; 255
     ac8:	9f 4f       	sbci	r25, 0xFF	; 255
     aca:	08 95       	ret

00000acc <__floatunsisf>:
     acc:	e8 94       	clt
     ace:	09 c0       	rjmp	.+18     	; 0xae2 <__floatsisf+0x12>

00000ad0 <__floatsisf>:
     ad0:	97 fb       	bst	r25, 7
     ad2:	3e f4       	brtc	.+14     	; 0xae2 <__floatsisf+0x12>
     ad4:	90 95       	com	r25
     ad6:	80 95       	com	r24
     ad8:	70 95       	com	r23
     ada:	61 95       	neg	r22
     adc:	7f 4f       	sbci	r23, 0xFF	; 255
     ade:	8f 4f       	sbci	r24, 0xFF	; 255
     ae0:	9f 4f       	sbci	r25, 0xFF	; 255
     ae2:	99 23       	and	r25, r25
     ae4:	a9 f0       	breq	.+42     	; 0xb10 <__floatsisf+0x40>
     ae6:	f9 2f       	mov	r31, r25
     ae8:	96 e9       	ldi	r25, 0x96	; 150
     aea:	bb 27       	eor	r27, r27
     aec:	93 95       	inc	r25
     aee:	f6 95       	lsr	r31
     af0:	87 95       	ror	r24
     af2:	77 95       	ror	r23
     af4:	67 95       	ror	r22
     af6:	b7 95       	ror	r27
     af8:	f1 11       	cpse	r31, r1
     afa:	f8 cf       	rjmp	.-16     	; 0xaec <__floatsisf+0x1c>
     afc:	fa f4       	brpl	.+62     	; 0xb3c <__floatsisf+0x6c>
     afe:	bb 0f       	add	r27, r27
     b00:	11 f4       	brne	.+4      	; 0xb06 <__floatsisf+0x36>
     b02:	60 ff       	sbrs	r22, 0
     b04:	1b c0       	rjmp	.+54     	; 0xb3c <__floatsisf+0x6c>
     b06:	6f 5f       	subi	r22, 0xFF	; 255
     b08:	7f 4f       	sbci	r23, 0xFF	; 255
     b0a:	8f 4f       	sbci	r24, 0xFF	; 255
     b0c:	9f 4f       	sbci	r25, 0xFF	; 255
     b0e:	16 c0       	rjmp	.+44     	; 0xb3c <__floatsisf+0x6c>
     b10:	88 23       	and	r24, r24
     b12:	11 f0       	breq	.+4      	; 0xb18 <__floatsisf+0x48>
     b14:	96 e9       	ldi	r25, 0x96	; 150
     b16:	11 c0       	rjmp	.+34     	; 0xb3a <__floatsisf+0x6a>
     b18:	77 23       	and	r23, r23
     b1a:	21 f0       	breq	.+8      	; 0xb24 <__floatsisf+0x54>
     b1c:	9e e8       	ldi	r25, 0x8E	; 142
     b1e:	87 2f       	mov	r24, r23
     b20:	76 2f       	mov	r23, r22
     b22:	05 c0       	rjmp	.+10     	; 0xb2e <__floatsisf+0x5e>
     b24:	66 23       	and	r22, r22
     b26:	71 f0       	breq	.+28     	; 0xb44 <__floatsisf+0x74>
     b28:	96 e8       	ldi	r25, 0x86	; 134
     b2a:	86 2f       	mov	r24, r22
     b2c:	70 e0       	ldi	r23, 0x00	; 0
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	2a f0       	brmi	.+10     	; 0xb3c <__floatsisf+0x6c>
     b32:	9a 95       	dec	r25
     b34:	66 0f       	add	r22, r22
     b36:	77 1f       	adc	r23, r23
     b38:	88 1f       	adc	r24, r24
     b3a:	da f7       	brpl	.-10     	; 0xb32 <__floatsisf+0x62>
     b3c:	88 0f       	add	r24, r24
     b3e:	96 95       	lsr	r25
     b40:	87 95       	ror	r24
     b42:	97 f9       	bld	r25, 7
     b44:	08 95       	ret

00000b46 <__fp_inf>:
     b46:	97 f9       	bld	r25, 7
     b48:	9f 67       	ori	r25, 0x7F	; 127
     b4a:	80 e8       	ldi	r24, 0x80	; 128
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	08 95       	ret

00000b52 <__fp_nan>:
     b52:	9f ef       	ldi	r25, 0xFF	; 255
     b54:	80 ec       	ldi	r24, 0xC0	; 192
     b56:	08 95       	ret

00000b58 <__fp_pscA>:
     b58:	00 24       	eor	r0, r0
     b5a:	0a 94       	dec	r0
     b5c:	16 16       	cp	r1, r22
     b5e:	17 06       	cpc	r1, r23
     b60:	18 06       	cpc	r1, r24
     b62:	09 06       	cpc	r0, r25
     b64:	08 95       	ret

00000b66 <__fp_pscB>:
     b66:	00 24       	eor	r0, r0
     b68:	0a 94       	dec	r0
     b6a:	12 16       	cp	r1, r18
     b6c:	13 06       	cpc	r1, r19
     b6e:	14 06       	cpc	r1, r20
     b70:	05 06       	cpc	r0, r21
     b72:	08 95       	ret
     b74:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_nan>

00000b78 <__fp_rempio2>:
     b78:	0e 94 12 06 	call	0xc24	; 0xc24 <__fp_splitA>
     b7c:	d8 f3       	brcs	.-10     	; 0xb74 <__fp_pscB+0xe>
     b7e:	e8 94       	clt
     b80:	e0 e0       	ldi	r30, 0x00	; 0
     b82:	bb 27       	eor	r27, r27
     b84:	9f 57       	subi	r25, 0x7F	; 127
     b86:	f0 f0       	brcs	.+60     	; 0xbc4 <__fp_rempio2+0x4c>
     b88:	2a ed       	ldi	r18, 0xDA	; 218
     b8a:	3f e0       	ldi	r19, 0x0F	; 15
     b8c:	49 ec       	ldi	r20, 0xC9	; 201
     b8e:	06 c0       	rjmp	.+12     	; 0xb9c <__fp_rempio2+0x24>
     b90:	ee 0f       	add	r30, r30
     b92:	bb 0f       	add	r27, r27
     b94:	66 1f       	adc	r22, r22
     b96:	77 1f       	adc	r23, r23
     b98:	88 1f       	adc	r24, r24
     b9a:	28 f0       	brcs	.+10     	; 0xba6 <__fp_rempio2+0x2e>
     b9c:	b2 3a       	cpi	r27, 0xA2	; 162
     b9e:	62 07       	cpc	r22, r18
     ba0:	73 07       	cpc	r23, r19
     ba2:	84 07       	cpc	r24, r20
     ba4:	28 f0       	brcs	.+10     	; 0xbb0 <__fp_rempio2+0x38>
     ba6:	b2 5a       	subi	r27, 0xA2	; 162
     ba8:	62 0b       	sbc	r22, r18
     baa:	73 0b       	sbc	r23, r19
     bac:	84 0b       	sbc	r24, r20
     bae:	e3 95       	inc	r30
     bb0:	9a 95       	dec	r25
     bb2:	72 f7       	brpl	.-36     	; 0xb90 <__fp_rempio2+0x18>
     bb4:	80 38       	cpi	r24, 0x80	; 128
     bb6:	30 f4       	brcc	.+12     	; 0xbc4 <__fp_rempio2+0x4c>
     bb8:	9a 95       	dec	r25
     bba:	bb 0f       	add	r27, r27
     bbc:	66 1f       	adc	r22, r22
     bbe:	77 1f       	adc	r23, r23
     bc0:	88 1f       	adc	r24, r24
     bc2:	d2 f7       	brpl	.-12     	; 0xbb8 <__fp_rempio2+0x40>
     bc4:	90 48       	sbci	r25, 0x80	; 128
     bc6:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__fp_mpack_finite>

00000bca <__fp_round>:
     bca:	09 2e       	mov	r0, r25
     bcc:	03 94       	inc	r0
     bce:	00 0c       	add	r0, r0
     bd0:	11 f4       	brne	.+4      	; 0xbd6 <__fp_round+0xc>
     bd2:	88 23       	and	r24, r24
     bd4:	52 f0       	brmi	.+20     	; 0xbea <__fp_round+0x20>
     bd6:	bb 0f       	add	r27, r27
     bd8:	40 f4       	brcc	.+16     	; 0xbea <__fp_round+0x20>
     bda:	bf 2b       	or	r27, r31
     bdc:	11 f4       	brne	.+4      	; 0xbe2 <__fp_round+0x18>
     bde:	60 ff       	sbrs	r22, 0
     be0:	04 c0       	rjmp	.+8      	; 0xbea <__fp_round+0x20>
     be2:	6f 5f       	subi	r22, 0xFF	; 255
     be4:	7f 4f       	sbci	r23, 0xFF	; 255
     be6:	8f 4f       	sbci	r24, 0xFF	; 255
     be8:	9f 4f       	sbci	r25, 0xFF	; 255
     bea:	08 95       	ret

00000bec <__fp_sinus>:
     bec:	ef 93       	push	r30
     bee:	e0 ff       	sbrs	r30, 0
     bf0:	07 c0       	rjmp	.+14     	; 0xc00 <__fp_sinus+0x14>
     bf2:	a2 ea       	ldi	r26, 0xA2	; 162
     bf4:	2a ed       	ldi	r18, 0xDA	; 218
     bf6:	3f e0       	ldi	r19, 0x0F	; 15
     bf8:	49 ec       	ldi	r20, 0xC9	; 201
     bfa:	5f eb       	ldi	r21, 0xBF	; 191
     bfc:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__addsf3x>
     c00:	0e 94 e5 05 	call	0xbca	; 0xbca <__fp_round>
     c04:	0f 90       	pop	r0
     c06:	03 94       	inc	r0
     c08:	01 fc       	sbrc	r0, 1
     c0a:	90 58       	subi	r25, 0x80	; 128
     c0c:	e4 eb       	ldi	r30, 0xB4	; 180
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	0c 94 b6 06 	jmp	0xd6c	; 0xd6c <__fp_powsodd>

00000c14 <__fp_split3>:
     c14:	57 fd       	sbrc	r21, 7
     c16:	90 58       	subi	r25, 0x80	; 128
     c18:	44 0f       	add	r20, r20
     c1a:	55 1f       	adc	r21, r21
     c1c:	59 f0       	breq	.+22     	; 0xc34 <__fp_splitA+0x10>
     c1e:	5f 3f       	cpi	r21, 0xFF	; 255
     c20:	71 f0       	breq	.+28     	; 0xc3e <__fp_splitA+0x1a>
     c22:	47 95       	ror	r20

00000c24 <__fp_splitA>:
     c24:	88 0f       	add	r24, r24
     c26:	97 fb       	bst	r25, 7
     c28:	99 1f       	adc	r25, r25
     c2a:	61 f0       	breq	.+24     	; 0xc44 <__fp_splitA+0x20>
     c2c:	9f 3f       	cpi	r25, 0xFF	; 255
     c2e:	79 f0       	breq	.+30     	; 0xc4e <__fp_splitA+0x2a>
     c30:	87 95       	ror	r24
     c32:	08 95       	ret
     c34:	12 16       	cp	r1, r18
     c36:	13 06       	cpc	r1, r19
     c38:	14 06       	cpc	r1, r20
     c3a:	55 1f       	adc	r21, r21
     c3c:	f2 cf       	rjmp	.-28     	; 0xc22 <__fp_split3+0xe>
     c3e:	46 95       	lsr	r20
     c40:	f1 df       	rcall	.-30     	; 0xc24 <__fp_splitA>
     c42:	08 c0       	rjmp	.+16     	; 0xc54 <__fp_splitA+0x30>
     c44:	16 16       	cp	r1, r22
     c46:	17 06       	cpc	r1, r23
     c48:	18 06       	cpc	r1, r24
     c4a:	99 1f       	adc	r25, r25
     c4c:	f1 cf       	rjmp	.-30     	; 0xc30 <__fp_splitA+0xc>
     c4e:	86 95       	lsr	r24
     c50:	71 05       	cpc	r23, r1
     c52:	61 05       	cpc	r22, r1
     c54:	08 94       	sec
     c56:	08 95       	ret

00000c58 <__fp_zero>:
     c58:	e8 94       	clt

00000c5a <__fp_szero>:
     c5a:	bb 27       	eor	r27, r27
     c5c:	66 27       	eor	r22, r22
     c5e:	77 27       	eor	r23, r23
     c60:	cb 01       	movw	r24, r22
     c62:	97 f9       	bld	r25, 7
     c64:	08 95       	ret

00000c66 <__mulsf3>:
     c66:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3x>
     c6a:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_round>
     c6e:	0e 94 ac 05 	call	0xb58	; 0xb58 <__fp_pscA>
     c72:	38 f0       	brcs	.+14     	; 0xc82 <__mulsf3+0x1c>
     c74:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fp_pscB>
     c78:	20 f0       	brcs	.+8      	; 0xc82 <__mulsf3+0x1c>
     c7a:	95 23       	and	r25, r21
     c7c:	11 f0       	breq	.+4      	; 0xc82 <__mulsf3+0x1c>
     c7e:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_inf>
     c82:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_nan>
     c86:	11 24       	eor	r1, r1
     c88:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__fp_szero>

00000c8c <__mulsf3x>:
     c8c:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fp_split3>
     c90:	70 f3       	brcs	.-36     	; 0xc6e <__mulsf3+0x8>

00000c92 <__mulsf3_pse>:
     c92:	95 9f       	mul	r25, r21
     c94:	c1 f3       	breq	.-16     	; 0xc86 <__mulsf3+0x20>
     c96:	95 0f       	add	r25, r21
     c98:	50 e0       	ldi	r21, 0x00	; 0
     c9a:	55 1f       	adc	r21, r21
     c9c:	62 9f       	mul	r22, r18
     c9e:	f0 01       	movw	r30, r0
     ca0:	72 9f       	mul	r23, r18
     ca2:	bb 27       	eor	r27, r27
     ca4:	f0 0d       	add	r31, r0
     ca6:	b1 1d       	adc	r27, r1
     ca8:	63 9f       	mul	r22, r19
     caa:	aa 27       	eor	r26, r26
     cac:	f0 0d       	add	r31, r0
     cae:	b1 1d       	adc	r27, r1
     cb0:	aa 1f       	adc	r26, r26
     cb2:	64 9f       	mul	r22, r20
     cb4:	66 27       	eor	r22, r22
     cb6:	b0 0d       	add	r27, r0
     cb8:	a1 1d       	adc	r26, r1
     cba:	66 1f       	adc	r22, r22
     cbc:	82 9f       	mul	r24, r18
     cbe:	22 27       	eor	r18, r18
     cc0:	b0 0d       	add	r27, r0
     cc2:	a1 1d       	adc	r26, r1
     cc4:	62 1f       	adc	r22, r18
     cc6:	73 9f       	mul	r23, r19
     cc8:	b0 0d       	add	r27, r0
     cca:	a1 1d       	adc	r26, r1
     ccc:	62 1f       	adc	r22, r18
     cce:	83 9f       	mul	r24, r19
     cd0:	a0 0d       	add	r26, r0
     cd2:	61 1d       	adc	r22, r1
     cd4:	22 1f       	adc	r18, r18
     cd6:	74 9f       	mul	r23, r20
     cd8:	33 27       	eor	r19, r19
     cda:	a0 0d       	add	r26, r0
     cdc:	61 1d       	adc	r22, r1
     cde:	23 1f       	adc	r18, r19
     ce0:	84 9f       	mul	r24, r20
     ce2:	60 0d       	add	r22, r0
     ce4:	21 1d       	adc	r18, r1
     ce6:	82 2f       	mov	r24, r18
     ce8:	76 2f       	mov	r23, r22
     cea:	6a 2f       	mov	r22, r26
     cec:	11 24       	eor	r1, r1
     cee:	9f 57       	subi	r25, 0x7F	; 127
     cf0:	50 40       	sbci	r21, 0x00	; 0
     cf2:	9a f0       	brmi	.+38     	; 0xd1a <__mulsf3_pse+0x88>
     cf4:	f1 f0       	breq	.+60     	; 0xd32 <__mulsf3_pse+0xa0>
     cf6:	88 23       	and	r24, r24
     cf8:	4a f0       	brmi	.+18     	; 0xd0c <__mulsf3_pse+0x7a>
     cfa:	ee 0f       	add	r30, r30
     cfc:	ff 1f       	adc	r31, r31
     cfe:	bb 1f       	adc	r27, r27
     d00:	66 1f       	adc	r22, r22
     d02:	77 1f       	adc	r23, r23
     d04:	88 1f       	adc	r24, r24
     d06:	91 50       	subi	r25, 0x01	; 1
     d08:	50 40       	sbci	r21, 0x00	; 0
     d0a:	a9 f7       	brne	.-22     	; 0xcf6 <__mulsf3_pse+0x64>
     d0c:	9e 3f       	cpi	r25, 0xFE	; 254
     d0e:	51 05       	cpc	r21, r1
     d10:	80 f0       	brcs	.+32     	; 0xd32 <__mulsf3_pse+0xa0>
     d12:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__fp_inf>
     d16:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__fp_szero>
     d1a:	5f 3f       	cpi	r21, 0xFF	; 255
     d1c:	e4 f3       	brlt	.-8      	; 0xd16 <__mulsf3_pse+0x84>
     d1e:	98 3e       	cpi	r25, 0xE8	; 232
     d20:	d4 f3       	brlt	.-12     	; 0xd16 <__mulsf3_pse+0x84>
     d22:	86 95       	lsr	r24
     d24:	77 95       	ror	r23
     d26:	67 95       	ror	r22
     d28:	b7 95       	ror	r27
     d2a:	f7 95       	ror	r31
     d2c:	e7 95       	ror	r30
     d2e:	9f 5f       	subi	r25, 0xFF	; 255
     d30:	c1 f7       	brne	.-16     	; 0xd22 <__mulsf3_pse+0x90>
     d32:	fe 2b       	or	r31, r30
     d34:	88 0f       	add	r24, r24
     d36:	91 1d       	adc	r25, r1
     d38:	96 95       	lsr	r25
     d3a:	87 95       	ror	r24
     d3c:	97 f9       	bld	r25, 7
     d3e:	08 95       	ret

00000d40 <sin>:
     d40:	9f 93       	push	r25
     d42:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_rempio2>
     d46:	0f 90       	pop	r0
     d48:	07 fc       	sbrc	r0, 7
     d4a:	ee 5f       	subi	r30, 0xFE	; 254
     d4c:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_sinus>

00000d50 <__fp_mpack>:
     d50:	9f 3f       	cpi	r25, 0xFF	; 255
     d52:	31 f0       	breq	.+12     	; 0xd60 <__fp_mpack_finite+0xc>

00000d54 <__fp_mpack_finite>:
     d54:	91 50       	subi	r25, 0x01	; 1
     d56:	20 f4       	brcc	.+8      	; 0xd60 <__fp_mpack_finite+0xc>
     d58:	87 95       	ror	r24
     d5a:	77 95       	ror	r23
     d5c:	67 95       	ror	r22
     d5e:	b7 95       	ror	r27
     d60:	88 0f       	add	r24, r24
     d62:	91 1d       	adc	r25, r1
     d64:	96 95       	lsr	r25
     d66:	87 95       	ror	r24
     d68:	97 f9       	bld	r25, 7
     d6a:	08 95       	ret

00000d6c <__fp_powsodd>:
     d6c:	9f 93       	push	r25
     d6e:	8f 93       	push	r24
     d70:	7f 93       	push	r23
     d72:	6f 93       	push	r22
     d74:	ff 93       	push	r31
     d76:	ef 93       	push	r30
     d78:	9b 01       	movw	r18, r22
     d7a:	ac 01       	movw	r20, r24
     d7c:	0e 94 33 06 	call	0xc66	; 0xc66 <__mulsf3>
     d80:	ef 91       	pop	r30
     d82:	ff 91       	pop	r31
     d84:	0e 94 ca 06 	call	0xd94	; 0xd94 <__fp_powser>
     d88:	2f 91       	pop	r18
     d8a:	3f 91       	pop	r19
     d8c:	4f 91       	pop	r20
     d8e:	5f 91       	pop	r21
     d90:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__mulsf3>

00000d94 <__fp_powser>:
     d94:	df 93       	push	r29
     d96:	cf 93       	push	r28
     d98:	1f 93       	push	r17
     d9a:	0f 93       	push	r16
     d9c:	ff 92       	push	r15
     d9e:	ef 92       	push	r14
     da0:	df 92       	push	r13
     da2:	7b 01       	movw	r14, r22
     da4:	8c 01       	movw	r16, r24
     da6:	68 94       	set
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <__fp_powser+0x22>
     daa:	da 2e       	mov	r13, r26
     dac:	ef 01       	movw	r28, r30
     dae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3x>
     db2:	fe 01       	movw	r30, r28
     db4:	e8 94       	clt
     db6:	a5 91       	lpm	r26, Z+
     db8:	25 91       	lpm	r18, Z+
     dba:	35 91       	lpm	r19, Z+
     dbc:	45 91       	lpm	r20, Z+
     dbe:	55 91       	lpm	r21, Z+
     dc0:	a6 f3       	brts	.-24     	; 0xdaa <__fp_powser+0x16>
     dc2:	ef 01       	movw	r28, r30
     dc4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__addsf3x>
     dc8:	fe 01       	movw	r30, r28
     dca:	97 01       	movw	r18, r14
     dcc:	a8 01       	movw	r20, r16
     dce:	da 94       	dec	r13
     dd0:	69 f7       	brne	.-38     	; 0xdac <__fp_powser+0x18>
     dd2:	df 90       	pop	r13
     dd4:	ef 90       	pop	r14
     dd6:	ff 90       	pop	r15
     dd8:	0f 91       	pop	r16
     dda:	1f 91       	pop	r17
     ddc:	cf 91       	pop	r28
     dde:	df 91       	pop	r29
     de0:	08 95       	ret

00000de2 <__divmodhi4>:
     de2:	97 fb       	bst	r25, 7
     de4:	07 2e       	mov	r0, r23
     de6:	16 f4       	brtc	.+4      	; 0xdec <__divmodhi4+0xa>
     de8:	00 94       	com	r0
     dea:	07 d0       	rcall	.+14     	; 0xdfa <__divmodhi4_neg1>
     dec:	77 fd       	sbrc	r23, 7
     dee:	09 d0       	rcall	.+18     	; 0xe02 <__divmodhi4_neg2>
     df0:	0e 94 05 07 	call	0xe0a	; 0xe0a <__udivmodhi4>
     df4:	07 fc       	sbrc	r0, 7
     df6:	05 d0       	rcall	.+10     	; 0xe02 <__divmodhi4_neg2>
     df8:	3e f4       	brtc	.+14     	; 0xe08 <__divmodhi4_exit>

00000dfa <__divmodhi4_neg1>:
     dfa:	90 95       	com	r25
     dfc:	81 95       	neg	r24
     dfe:	9f 4f       	sbci	r25, 0xFF	; 255
     e00:	08 95       	ret

00000e02 <__divmodhi4_neg2>:
     e02:	70 95       	com	r23
     e04:	61 95       	neg	r22
     e06:	7f 4f       	sbci	r23, 0xFF	; 255

00000e08 <__divmodhi4_exit>:
     e08:	08 95       	ret

00000e0a <__udivmodhi4>:
     e0a:	aa 1b       	sub	r26, r26
     e0c:	bb 1b       	sub	r27, r27
     e0e:	51 e1       	ldi	r21, 0x11	; 17
     e10:	07 c0       	rjmp	.+14     	; 0xe20 <__udivmodhi4_ep>

00000e12 <__udivmodhi4_loop>:
     e12:	aa 1f       	adc	r26, r26
     e14:	bb 1f       	adc	r27, r27
     e16:	a6 17       	cp	r26, r22
     e18:	b7 07       	cpc	r27, r23
     e1a:	10 f0       	brcs	.+4      	; 0xe20 <__udivmodhi4_ep>
     e1c:	a6 1b       	sub	r26, r22
     e1e:	b7 0b       	sbc	r27, r23

00000e20 <__udivmodhi4_ep>:
     e20:	88 1f       	adc	r24, r24
     e22:	99 1f       	adc	r25, r25
     e24:	5a 95       	dec	r21
     e26:	a9 f7       	brne	.-22     	; 0xe12 <__udivmodhi4_loop>
     e28:	80 95       	com	r24
     e2a:	90 95       	com	r25
     e2c:	bc 01       	movw	r22, r24
     e2e:	cd 01       	movw	r24, r26
     e30:	08 95       	ret

00000e32 <atoi>:
     e32:	fc 01       	movw	r30, r24
     e34:	88 27       	eor	r24, r24
     e36:	99 27       	eor	r25, r25
     e38:	e8 94       	clt
     e3a:	21 91       	ld	r18, Z+
     e3c:	20 32       	cpi	r18, 0x20	; 32
     e3e:	e9 f3       	breq	.-6      	; 0xe3a <atoi+0x8>
     e40:	29 30       	cpi	r18, 0x09	; 9
     e42:	10 f0       	brcs	.+4      	; 0xe48 <atoi+0x16>
     e44:	2e 30       	cpi	r18, 0x0E	; 14
     e46:	c8 f3       	brcs	.-14     	; 0xe3a <atoi+0x8>
     e48:	2b 32       	cpi	r18, 0x2B	; 43
     e4a:	41 f0       	breq	.+16     	; 0xe5c <atoi+0x2a>
     e4c:	2d 32       	cpi	r18, 0x2D	; 45
     e4e:	39 f4       	brne	.+14     	; 0xe5e <atoi+0x2c>
     e50:	68 94       	set
     e52:	04 c0       	rjmp	.+8      	; 0xe5c <atoi+0x2a>
     e54:	0e 94 37 07 	call	0xe6e	; 0xe6e <__mulhi_const_10>
     e58:	82 0f       	add	r24, r18
     e5a:	91 1d       	adc	r25, r1
     e5c:	21 91       	ld	r18, Z+
     e5e:	20 53       	subi	r18, 0x30	; 48
     e60:	2a 30       	cpi	r18, 0x0A	; 10
     e62:	c0 f3       	brcs	.-16     	; 0xe54 <atoi+0x22>
     e64:	1e f4       	brtc	.+6      	; 0xe6c <atoi+0x3a>
     e66:	90 95       	com	r25
     e68:	81 95       	neg	r24
     e6a:	9f 4f       	sbci	r25, 0xFF	; 255
     e6c:	08 95       	ret

00000e6e <__mulhi_const_10>:
     e6e:	7a e0       	ldi	r23, 0x0A	; 10
     e70:	97 9f       	mul	r25, r23
     e72:	90 2d       	mov	r25, r0
     e74:	87 9f       	mul	r24, r23
     e76:	80 2d       	mov	r24, r0
     e78:	91 0d       	add	r25, r1
     e7a:	11 24       	eor	r1, r1
     e7c:	08 95       	ret

00000e7e <sprintf>:
     e7e:	ae e0       	ldi	r26, 0x0E	; 14
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	e5 e4       	ldi	r30, 0x45	; 69
     e84:	f7 e0       	ldi	r31, 0x07	; 7
     e86:	0c 94 00 0a 	jmp	0x1400	; 0x1400 <__prologue_saves__+0x1c>
     e8a:	0d 89       	ldd	r16, Y+21	; 0x15
     e8c:	1e 89       	ldd	r17, Y+22	; 0x16
     e8e:	86 e0       	ldi	r24, 0x06	; 6
     e90:	8c 83       	std	Y+4, r24	; 0x04
     e92:	1a 83       	std	Y+2, r17	; 0x02
     e94:	09 83       	std	Y+1, r16	; 0x01
     e96:	8f ef       	ldi	r24, 0xFF	; 255
     e98:	9f e7       	ldi	r25, 0x7F	; 127
     e9a:	9e 83       	std	Y+6, r25	; 0x06
     e9c:	8d 83       	std	Y+5, r24	; 0x05
     e9e:	ae 01       	movw	r20, r28
     ea0:	47 5e       	subi	r20, 0xE7	; 231
     ea2:	5f 4f       	sbci	r21, 0xFF	; 255
     ea4:	6f 89       	ldd	r22, Y+23	; 0x17
     ea6:	78 8d       	ldd	r23, Y+24	; 0x18
     ea8:	ce 01       	movw	r24, r28
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	0e 94 61 07 	call	0xec2	; 0xec2 <vfprintf>
     eb0:	ef 81       	ldd	r30, Y+7	; 0x07
     eb2:	f8 85       	ldd	r31, Y+8	; 0x08
     eb4:	e0 0f       	add	r30, r16
     eb6:	f1 1f       	adc	r31, r17
     eb8:	10 82       	st	Z, r1
     eba:	2e 96       	adiw	r28, 0x0e	; 14
     ebc:	e4 e0       	ldi	r30, 0x04	; 4
     ebe:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <__epilogue_restores__+0x1c>

00000ec2 <vfprintf>:
     ec2:	ab e0       	ldi	r26, 0x0B	; 11
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e7 e6       	ldi	r30, 0x67	; 103
     ec8:	f7 e0       	ldi	r31, 0x07	; 7
     eca:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__prologue_saves__>
     ece:	6c 01       	movw	r12, r24
     ed0:	7b 01       	movw	r14, r22
     ed2:	8a 01       	movw	r16, r20
     ed4:	fc 01       	movw	r30, r24
     ed6:	17 82       	std	Z+7, r1	; 0x07
     ed8:	16 82       	std	Z+6, r1	; 0x06
     eda:	83 81       	ldd	r24, Z+3	; 0x03
     edc:	81 ff       	sbrs	r24, 1
     ede:	cc c1       	rjmp	.+920    	; 0x1278 <vfprintf+0x3b6>
     ee0:	ce 01       	movw	r24, r28
     ee2:	01 96       	adiw	r24, 0x01	; 1
     ee4:	3c 01       	movw	r6, r24
     ee6:	f6 01       	movw	r30, r12
     ee8:	93 81       	ldd	r25, Z+3	; 0x03
     eea:	f7 01       	movw	r30, r14
     eec:	93 fd       	sbrc	r25, 3
     eee:	85 91       	lpm	r24, Z+
     ef0:	93 ff       	sbrs	r25, 3
     ef2:	81 91       	ld	r24, Z+
     ef4:	7f 01       	movw	r14, r30
     ef6:	88 23       	and	r24, r24
     ef8:	09 f4       	brne	.+2      	; 0xefc <vfprintf+0x3a>
     efa:	ba c1       	rjmp	.+884    	; 0x1270 <vfprintf+0x3ae>
     efc:	85 32       	cpi	r24, 0x25	; 37
     efe:	39 f4       	brne	.+14     	; 0xf0e <vfprintf+0x4c>
     f00:	93 fd       	sbrc	r25, 3
     f02:	85 91       	lpm	r24, Z+
     f04:	93 ff       	sbrs	r25, 3
     f06:	81 91       	ld	r24, Z+
     f08:	7f 01       	movw	r14, r30
     f0a:	85 32       	cpi	r24, 0x25	; 37
     f0c:	29 f4       	brne	.+10     	; 0xf18 <vfprintf+0x56>
     f0e:	b6 01       	movw	r22, r12
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
     f16:	e7 cf       	rjmp	.-50     	; 0xee6 <vfprintf+0x24>
     f18:	91 2c       	mov	r9, r1
     f1a:	21 2c       	mov	r2, r1
     f1c:	31 2c       	mov	r3, r1
     f1e:	ff e1       	ldi	r31, 0x1F	; 31
     f20:	f3 15       	cp	r31, r3
     f22:	d8 f0       	brcs	.+54     	; 0xf5a <vfprintf+0x98>
     f24:	8b 32       	cpi	r24, 0x2B	; 43
     f26:	79 f0       	breq	.+30     	; 0xf46 <vfprintf+0x84>
     f28:	38 f4       	brcc	.+14     	; 0xf38 <vfprintf+0x76>
     f2a:	80 32       	cpi	r24, 0x20	; 32
     f2c:	79 f0       	breq	.+30     	; 0xf4c <vfprintf+0x8a>
     f2e:	83 32       	cpi	r24, 0x23	; 35
     f30:	a1 f4       	brne	.+40     	; 0xf5a <vfprintf+0x98>
     f32:	23 2d       	mov	r18, r3
     f34:	20 61       	ori	r18, 0x10	; 16
     f36:	1d c0       	rjmp	.+58     	; 0xf72 <vfprintf+0xb0>
     f38:	8d 32       	cpi	r24, 0x2D	; 45
     f3a:	61 f0       	breq	.+24     	; 0xf54 <vfprintf+0x92>
     f3c:	80 33       	cpi	r24, 0x30	; 48
     f3e:	69 f4       	brne	.+26     	; 0xf5a <vfprintf+0x98>
     f40:	23 2d       	mov	r18, r3
     f42:	21 60       	ori	r18, 0x01	; 1
     f44:	16 c0       	rjmp	.+44     	; 0xf72 <vfprintf+0xb0>
     f46:	83 2d       	mov	r24, r3
     f48:	82 60       	ori	r24, 0x02	; 2
     f4a:	38 2e       	mov	r3, r24
     f4c:	e3 2d       	mov	r30, r3
     f4e:	e4 60       	ori	r30, 0x04	; 4
     f50:	3e 2e       	mov	r3, r30
     f52:	2a c0       	rjmp	.+84     	; 0xfa8 <vfprintf+0xe6>
     f54:	f3 2d       	mov	r31, r3
     f56:	f8 60       	ori	r31, 0x08	; 8
     f58:	1d c0       	rjmp	.+58     	; 0xf94 <vfprintf+0xd2>
     f5a:	37 fc       	sbrc	r3, 7
     f5c:	2d c0       	rjmp	.+90     	; 0xfb8 <vfprintf+0xf6>
     f5e:	20 ed       	ldi	r18, 0xD0	; 208
     f60:	28 0f       	add	r18, r24
     f62:	2a 30       	cpi	r18, 0x0A	; 10
     f64:	40 f0       	brcs	.+16     	; 0xf76 <vfprintf+0xb4>
     f66:	8e 32       	cpi	r24, 0x2E	; 46
     f68:	b9 f4       	brne	.+46     	; 0xf98 <vfprintf+0xd6>
     f6a:	36 fc       	sbrc	r3, 6
     f6c:	81 c1       	rjmp	.+770    	; 0x1270 <vfprintf+0x3ae>
     f6e:	23 2d       	mov	r18, r3
     f70:	20 64       	ori	r18, 0x40	; 64
     f72:	32 2e       	mov	r3, r18
     f74:	19 c0       	rjmp	.+50     	; 0xfa8 <vfprintf+0xe6>
     f76:	36 fe       	sbrs	r3, 6
     f78:	06 c0       	rjmp	.+12     	; 0xf86 <vfprintf+0xc4>
     f7a:	8a e0       	ldi	r24, 0x0A	; 10
     f7c:	98 9e       	mul	r9, r24
     f7e:	20 0d       	add	r18, r0
     f80:	11 24       	eor	r1, r1
     f82:	92 2e       	mov	r9, r18
     f84:	11 c0       	rjmp	.+34     	; 0xfa8 <vfprintf+0xe6>
     f86:	ea e0       	ldi	r30, 0x0A	; 10
     f88:	2e 9e       	mul	r2, r30
     f8a:	20 0d       	add	r18, r0
     f8c:	11 24       	eor	r1, r1
     f8e:	22 2e       	mov	r2, r18
     f90:	f3 2d       	mov	r31, r3
     f92:	f0 62       	ori	r31, 0x20	; 32
     f94:	3f 2e       	mov	r3, r31
     f96:	08 c0       	rjmp	.+16     	; 0xfa8 <vfprintf+0xe6>
     f98:	8c 36       	cpi	r24, 0x6C	; 108
     f9a:	21 f4       	brne	.+8      	; 0xfa4 <vfprintf+0xe2>
     f9c:	83 2d       	mov	r24, r3
     f9e:	80 68       	ori	r24, 0x80	; 128
     fa0:	38 2e       	mov	r3, r24
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <vfprintf+0xe6>
     fa4:	88 36       	cpi	r24, 0x68	; 104
     fa6:	41 f4       	brne	.+16     	; 0xfb8 <vfprintf+0xf6>
     fa8:	f7 01       	movw	r30, r14
     faa:	93 fd       	sbrc	r25, 3
     fac:	85 91       	lpm	r24, Z+
     fae:	93 ff       	sbrs	r25, 3
     fb0:	81 91       	ld	r24, Z+
     fb2:	7f 01       	movw	r14, r30
     fb4:	81 11       	cpse	r24, r1
     fb6:	b3 cf       	rjmp	.-154    	; 0xf1e <vfprintf+0x5c>
     fb8:	98 2f       	mov	r25, r24
     fba:	9f 7d       	andi	r25, 0xDF	; 223
     fbc:	95 54       	subi	r25, 0x45	; 69
     fbe:	93 30       	cpi	r25, 0x03	; 3
     fc0:	28 f4       	brcc	.+10     	; 0xfcc <vfprintf+0x10a>
     fc2:	0c 5f       	subi	r16, 0xFC	; 252
     fc4:	1f 4f       	sbci	r17, 0xFF	; 255
     fc6:	9f e3       	ldi	r25, 0x3F	; 63
     fc8:	99 83       	std	Y+1, r25	; 0x01
     fca:	0d c0       	rjmp	.+26     	; 0xfe6 <vfprintf+0x124>
     fcc:	83 36       	cpi	r24, 0x63	; 99
     fce:	31 f0       	breq	.+12     	; 0xfdc <vfprintf+0x11a>
     fd0:	83 37       	cpi	r24, 0x73	; 115
     fd2:	71 f0       	breq	.+28     	; 0xff0 <vfprintf+0x12e>
     fd4:	83 35       	cpi	r24, 0x53	; 83
     fd6:	09 f0       	breq	.+2      	; 0xfda <vfprintf+0x118>
     fd8:	59 c0       	rjmp	.+178    	; 0x108c <vfprintf+0x1ca>
     fda:	21 c0       	rjmp	.+66     	; 0x101e <vfprintf+0x15c>
     fdc:	f8 01       	movw	r30, r16
     fde:	80 81       	ld	r24, Z
     fe0:	89 83       	std	Y+1, r24	; 0x01
     fe2:	0e 5f       	subi	r16, 0xFE	; 254
     fe4:	1f 4f       	sbci	r17, 0xFF	; 255
     fe6:	88 24       	eor	r8, r8
     fe8:	83 94       	inc	r8
     fea:	91 2c       	mov	r9, r1
     fec:	53 01       	movw	r10, r6
     fee:	13 c0       	rjmp	.+38     	; 0x1016 <vfprintf+0x154>
     ff0:	28 01       	movw	r4, r16
     ff2:	f2 e0       	ldi	r31, 0x02	; 2
     ff4:	4f 0e       	add	r4, r31
     ff6:	51 1c       	adc	r5, r1
     ff8:	f8 01       	movw	r30, r16
     ffa:	a0 80       	ld	r10, Z
     ffc:	b1 80       	ldd	r11, Z+1	; 0x01
     ffe:	36 fe       	sbrs	r3, 6
    1000:	03 c0       	rjmp	.+6      	; 0x1008 <vfprintf+0x146>
    1002:	69 2d       	mov	r22, r9
    1004:	70 e0       	ldi	r23, 0x00	; 0
    1006:	02 c0       	rjmp	.+4      	; 0x100c <vfprintf+0x14a>
    1008:	6f ef       	ldi	r22, 0xFF	; 255
    100a:	7f ef       	ldi	r23, 0xFF	; 255
    100c:	c5 01       	movw	r24, r10
    100e:	0e 94 4d 09 	call	0x129a	; 0x129a <strnlen>
    1012:	4c 01       	movw	r8, r24
    1014:	82 01       	movw	r16, r4
    1016:	f3 2d       	mov	r31, r3
    1018:	ff 77       	andi	r31, 0x7F	; 127
    101a:	3f 2e       	mov	r3, r31
    101c:	16 c0       	rjmp	.+44     	; 0x104a <vfprintf+0x188>
    101e:	28 01       	movw	r4, r16
    1020:	22 e0       	ldi	r18, 0x02	; 2
    1022:	42 0e       	add	r4, r18
    1024:	51 1c       	adc	r5, r1
    1026:	f8 01       	movw	r30, r16
    1028:	a0 80       	ld	r10, Z
    102a:	b1 80       	ldd	r11, Z+1	; 0x01
    102c:	36 fe       	sbrs	r3, 6
    102e:	03 c0       	rjmp	.+6      	; 0x1036 <vfprintf+0x174>
    1030:	69 2d       	mov	r22, r9
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	02 c0       	rjmp	.+4      	; 0x103a <vfprintf+0x178>
    1036:	6f ef       	ldi	r22, 0xFF	; 255
    1038:	7f ef       	ldi	r23, 0xFF	; 255
    103a:	c5 01       	movw	r24, r10
    103c:	0e 94 42 09 	call	0x1284	; 0x1284 <strnlen_P>
    1040:	4c 01       	movw	r8, r24
    1042:	f3 2d       	mov	r31, r3
    1044:	f0 68       	ori	r31, 0x80	; 128
    1046:	3f 2e       	mov	r3, r31
    1048:	82 01       	movw	r16, r4
    104a:	33 fc       	sbrc	r3, 3
    104c:	1b c0       	rjmp	.+54     	; 0x1084 <vfprintf+0x1c2>
    104e:	82 2d       	mov	r24, r2
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	88 16       	cp	r8, r24
    1054:	99 06       	cpc	r9, r25
    1056:	b0 f4       	brcc	.+44     	; 0x1084 <vfprintf+0x1c2>
    1058:	b6 01       	movw	r22, r12
    105a:	80 e2       	ldi	r24, 0x20	; 32
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    1062:	2a 94       	dec	r2
    1064:	f4 cf       	rjmp	.-24     	; 0x104e <vfprintf+0x18c>
    1066:	f5 01       	movw	r30, r10
    1068:	37 fc       	sbrc	r3, 7
    106a:	85 91       	lpm	r24, Z+
    106c:	37 fe       	sbrs	r3, 7
    106e:	81 91       	ld	r24, Z+
    1070:	5f 01       	movw	r10, r30
    1072:	b6 01       	movw	r22, r12
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    107a:	21 10       	cpse	r2, r1
    107c:	2a 94       	dec	r2
    107e:	21 e0       	ldi	r18, 0x01	; 1
    1080:	82 1a       	sub	r8, r18
    1082:	91 08       	sbc	r9, r1
    1084:	81 14       	cp	r8, r1
    1086:	91 04       	cpc	r9, r1
    1088:	71 f7       	brne	.-36     	; 0x1066 <vfprintf+0x1a4>
    108a:	e8 c0       	rjmp	.+464    	; 0x125c <vfprintf+0x39a>
    108c:	84 36       	cpi	r24, 0x64	; 100
    108e:	11 f0       	breq	.+4      	; 0x1094 <vfprintf+0x1d2>
    1090:	89 36       	cpi	r24, 0x69	; 105
    1092:	41 f5       	brne	.+80     	; 0x10e4 <vfprintf+0x222>
    1094:	f8 01       	movw	r30, r16
    1096:	37 fe       	sbrs	r3, 7
    1098:	07 c0       	rjmp	.+14     	; 0x10a8 <vfprintf+0x1e6>
    109a:	60 81       	ld	r22, Z
    109c:	71 81       	ldd	r23, Z+1	; 0x01
    109e:	82 81       	ldd	r24, Z+2	; 0x02
    10a0:	93 81       	ldd	r25, Z+3	; 0x03
    10a2:	0c 5f       	subi	r16, 0xFC	; 252
    10a4:	1f 4f       	sbci	r17, 0xFF	; 255
    10a6:	08 c0       	rjmp	.+16     	; 0x10b8 <vfprintf+0x1f6>
    10a8:	60 81       	ld	r22, Z
    10aa:	71 81       	ldd	r23, Z+1	; 0x01
    10ac:	07 2e       	mov	r0, r23
    10ae:	00 0c       	add	r0, r0
    10b0:	88 0b       	sbc	r24, r24
    10b2:	99 0b       	sbc	r25, r25
    10b4:	0e 5f       	subi	r16, 0xFE	; 254
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	f3 2d       	mov	r31, r3
    10ba:	ff 76       	andi	r31, 0x6F	; 111
    10bc:	3f 2e       	mov	r3, r31
    10be:	97 ff       	sbrs	r25, 7
    10c0:	09 c0       	rjmp	.+18     	; 0x10d4 <vfprintf+0x212>
    10c2:	90 95       	com	r25
    10c4:	80 95       	com	r24
    10c6:	70 95       	com	r23
    10c8:	61 95       	neg	r22
    10ca:	7f 4f       	sbci	r23, 0xFF	; 255
    10cc:	8f 4f       	sbci	r24, 0xFF	; 255
    10ce:	9f 4f       	sbci	r25, 0xFF	; 255
    10d0:	f0 68       	ori	r31, 0x80	; 128
    10d2:	3f 2e       	mov	r3, r31
    10d4:	2a e0       	ldi	r18, 0x0A	; 10
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	a3 01       	movw	r20, r6
    10da:	0e 94 94 09 	call	0x1328	; 0x1328 <__ultoa_invert>
    10de:	88 2e       	mov	r8, r24
    10e0:	86 18       	sub	r8, r6
    10e2:	45 c0       	rjmp	.+138    	; 0x116e <vfprintf+0x2ac>
    10e4:	85 37       	cpi	r24, 0x75	; 117
    10e6:	31 f4       	brne	.+12     	; 0x10f4 <vfprintf+0x232>
    10e8:	23 2d       	mov	r18, r3
    10ea:	2f 7e       	andi	r18, 0xEF	; 239
    10ec:	b2 2e       	mov	r11, r18
    10ee:	2a e0       	ldi	r18, 0x0A	; 10
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	25 c0       	rjmp	.+74     	; 0x113e <vfprintf+0x27c>
    10f4:	93 2d       	mov	r25, r3
    10f6:	99 7f       	andi	r25, 0xF9	; 249
    10f8:	b9 2e       	mov	r11, r25
    10fa:	8f 36       	cpi	r24, 0x6F	; 111
    10fc:	c1 f0       	breq	.+48     	; 0x112e <vfprintf+0x26c>
    10fe:	18 f4       	brcc	.+6      	; 0x1106 <vfprintf+0x244>
    1100:	88 35       	cpi	r24, 0x58	; 88
    1102:	79 f0       	breq	.+30     	; 0x1122 <vfprintf+0x260>
    1104:	b5 c0       	rjmp	.+362    	; 0x1270 <vfprintf+0x3ae>
    1106:	80 37       	cpi	r24, 0x70	; 112
    1108:	19 f0       	breq	.+6      	; 0x1110 <vfprintf+0x24e>
    110a:	88 37       	cpi	r24, 0x78	; 120
    110c:	21 f0       	breq	.+8      	; 0x1116 <vfprintf+0x254>
    110e:	b0 c0       	rjmp	.+352    	; 0x1270 <vfprintf+0x3ae>
    1110:	e9 2f       	mov	r30, r25
    1112:	e0 61       	ori	r30, 0x10	; 16
    1114:	be 2e       	mov	r11, r30
    1116:	b4 fe       	sbrs	r11, 4
    1118:	0d c0       	rjmp	.+26     	; 0x1134 <vfprintf+0x272>
    111a:	fb 2d       	mov	r31, r11
    111c:	f4 60       	ori	r31, 0x04	; 4
    111e:	bf 2e       	mov	r11, r31
    1120:	09 c0       	rjmp	.+18     	; 0x1134 <vfprintf+0x272>
    1122:	34 fe       	sbrs	r3, 4
    1124:	0a c0       	rjmp	.+20     	; 0x113a <vfprintf+0x278>
    1126:	29 2f       	mov	r18, r25
    1128:	26 60       	ori	r18, 0x06	; 6
    112a:	b2 2e       	mov	r11, r18
    112c:	06 c0       	rjmp	.+12     	; 0x113a <vfprintf+0x278>
    112e:	28 e0       	ldi	r18, 0x08	; 8
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	05 c0       	rjmp	.+10     	; 0x113e <vfprintf+0x27c>
    1134:	20 e1       	ldi	r18, 0x10	; 16
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	02 c0       	rjmp	.+4      	; 0x113e <vfprintf+0x27c>
    113a:	20 e1       	ldi	r18, 0x10	; 16
    113c:	32 e0       	ldi	r19, 0x02	; 2
    113e:	f8 01       	movw	r30, r16
    1140:	b7 fe       	sbrs	r11, 7
    1142:	07 c0       	rjmp	.+14     	; 0x1152 <vfprintf+0x290>
    1144:	60 81       	ld	r22, Z
    1146:	71 81       	ldd	r23, Z+1	; 0x01
    1148:	82 81       	ldd	r24, Z+2	; 0x02
    114a:	93 81       	ldd	r25, Z+3	; 0x03
    114c:	0c 5f       	subi	r16, 0xFC	; 252
    114e:	1f 4f       	sbci	r17, 0xFF	; 255
    1150:	06 c0       	rjmp	.+12     	; 0x115e <vfprintf+0x29c>
    1152:	60 81       	ld	r22, Z
    1154:	71 81       	ldd	r23, Z+1	; 0x01
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	0e 5f       	subi	r16, 0xFE	; 254
    115c:	1f 4f       	sbci	r17, 0xFF	; 255
    115e:	a3 01       	movw	r20, r6
    1160:	0e 94 94 09 	call	0x1328	; 0x1328 <__ultoa_invert>
    1164:	88 2e       	mov	r8, r24
    1166:	86 18       	sub	r8, r6
    1168:	fb 2d       	mov	r31, r11
    116a:	ff 77       	andi	r31, 0x7F	; 127
    116c:	3f 2e       	mov	r3, r31
    116e:	36 fe       	sbrs	r3, 6
    1170:	0d c0       	rjmp	.+26     	; 0x118c <vfprintf+0x2ca>
    1172:	23 2d       	mov	r18, r3
    1174:	2e 7f       	andi	r18, 0xFE	; 254
    1176:	a2 2e       	mov	r10, r18
    1178:	89 14       	cp	r8, r9
    117a:	58 f4       	brcc	.+22     	; 0x1192 <vfprintf+0x2d0>
    117c:	34 fe       	sbrs	r3, 4
    117e:	0b c0       	rjmp	.+22     	; 0x1196 <vfprintf+0x2d4>
    1180:	32 fc       	sbrc	r3, 2
    1182:	09 c0       	rjmp	.+18     	; 0x1196 <vfprintf+0x2d4>
    1184:	83 2d       	mov	r24, r3
    1186:	8e 7e       	andi	r24, 0xEE	; 238
    1188:	a8 2e       	mov	r10, r24
    118a:	05 c0       	rjmp	.+10     	; 0x1196 <vfprintf+0x2d4>
    118c:	b8 2c       	mov	r11, r8
    118e:	a3 2c       	mov	r10, r3
    1190:	03 c0       	rjmp	.+6      	; 0x1198 <vfprintf+0x2d6>
    1192:	b8 2c       	mov	r11, r8
    1194:	01 c0       	rjmp	.+2      	; 0x1198 <vfprintf+0x2d6>
    1196:	b9 2c       	mov	r11, r9
    1198:	a4 fe       	sbrs	r10, 4
    119a:	0f c0       	rjmp	.+30     	; 0x11ba <vfprintf+0x2f8>
    119c:	fe 01       	movw	r30, r28
    119e:	e8 0d       	add	r30, r8
    11a0:	f1 1d       	adc	r31, r1
    11a2:	80 81       	ld	r24, Z
    11a4:	80 33       	cpi	r24, 0x30	; 48
    11a6:	21 f4       	brne	.+8      	; 0x11b0 <vfprintf+0x2ee>
    11a8:	9a 2d       	mov	r25, r10
    11aa:	99 7e       	andi	r25, 0xE9	; 233
    11ac:	a9 2e       	mov	r10, r25
    11ae:	09 c0       	rjmp	.+18     	; 0x11c2 <vfprintf+0x300>
    11b0:	a2 fe       	sbrs	r10, 2
    11b2:	06 c0       	rjmp	.+12     	; 0x11c0 <vfprintf+0x2fe>
    11b4:	b3 94       	inc	r11
    11b6:	b3 94       	inc	r11
    11b8:	04 c0       	rjmp	.+8      	; 0x11c2 <vfprintf+0x300>
    11ba:	8a 2d       	mov	r24, r10
    11bc:	86 78       	andi	r24, 0x86	; 134
    11be:	09 f0       	breq	.+2      	; 0x11c2 <vfprintf+0x300>
    11c0:	b3 94       	inc	r11
    11c2:	a3 fc       	sbrc	r10, 3
    11c4:	11 c0       	rjmp	.+34     	; 0x11e8 <vfprintf+0x326>
    11c6:	a0 fe       	sbrs	r10, 0
    11c8:	06 c0       	rjmp	.+12     	; 0x11d6 <vfprintf+0x314>
    11ca:	b2 14       	cp	r11, r2
    11cc:	88 f4       	brcc	.+34     	; 0x11f0 <vfprintf+0x32e>
    11ce:	28 0c       	add	r2, r8
    11d0:	92 2c       	mov	r9, r2
    11d2:	9b 18       	sub	r9, r11
    11d4:	0e c0       	rjmp	.+28     	; 0x11f2 <vfprintf+0x330>
    11d6:	b2 14       	cp	r11, r2
    11d8:	60 f4       	brcc	.+24     	; 0x11f2 <vfprintf+0x330>
    11da:	b6 01       	movw	r22, r12
    11dc:	80 e2       	ldi	r24, 0x20	; 32
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    11e4:	b3 94       	inc	r11
    11e6:	f7 cf       	rjmp	.-18     	; 0x11d6 <vfprintf+0x314>
    11e8:	b2 14       	cp	r11, r2
    11ea:	18 f4       	brcc	.+6      	; 0x11f2 <vfprintf+0x330>
    11ec:	2b 18       	sub	r2, r11
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <vfprintf+0x332>
    11f0:	98 2c       	mov	r9, r8
    11f2:	21 2c       	mov	r2, r1
    11f4:	a4 fe       	sbrs	r10, 4
    11f6:	10 c0       	rjmp	.+32     	; 0x1218 <vfprintf+0x356>
    11f8:	b6 01       	movw	r22, r12
    11fa:	80 e3       	ldi	r24, 0x30	; 48
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    1202:	a2 fe       	sbrs	r10, 2
    1204:	17 c0       	rjmp	.+46     	; 0x1234 <vfprintf+0x372>
    1206:	a1 fc       	sbrc	r10, 1
    1208:	03 c0       	rjmp	.+6      	; 0x1210 <vfprintf+0x34e>
    120a:	88 e7       	ldi	r24, 0x78	; 120
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <vfprintf+0x352>
    1210:	88 e5       	ldi	r24, 0x58	; 88
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	b6 01       	movw	r22, r12
    1216:	0c c0       	rjmp	.+24     	; 0x1230 <vfprintf+0x36e>
    1218:	8a 2d       	mov	r24, r10
    121a:	86 78       	andi	r24, 0x86	; 134
    121c:	59 f0       	breq	.+22     	; 0x1234 <vfprintf+0x372>
    121e:	a1 fe       	sbrs	r10, 1
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <vfprintf+0x364>
    1222:	8b e2       	ldi	r24, 0x2B	; 43
    1224:	01 c0       	rjmp	.+2      	; 0x1228 <vfprintf+0x366>
    1226:	80 e2       	ldi	r24, 0x20	; 32
    1228:	a7 fc       	sbrc	r10, 7
    122a:	8d e2       	ldi	r24, 0x2D	; 45
    122c:	b6 01       	movw	r22, r12
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    1234:	89 14       	cp	r8, r9
    1236:	38 f4       	brcc	.+14     	; 0x1246 <vfprintf+0x384>
    1238:	b6 01       	movw	r22, r12
    123a:	80 e3       	ldi	r24, 0x30	; 48
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    1242:	9a 94       	dec	r9
    1244:	f7 cf       	rjmp	.-18     	; 0x1234 <vfprintf+0x372>
    1246:	8a 94       	dec	r8
    1248:	f3 01       	movw	r30, r6
    124a:	e8 0d       	add	r30, r8
    124c:	f1 1d       	adc	r31, r1
    124e:	80 81       	ld	r24, Z
    1250:	b6 01       	movw	r22, r12
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    1258:	81 10       	cpse	r8, r1
    125a:	f5 cf       	rjmp	.-22     	; 0x1246 <vfprintf+0x384>
    125c:	22 20       	and	r2, r2
    125e:	09 f4       	brne	.+2      	; 0x1262 <vfprintf+0x3a0>
    1260:	42 ce       	rjmp	.-892    	; 0xee6 <vfprintf+0x24>
    1262:	b6 01       	movw	r22, r12
    1264:	80 e2       	ldi	r24, 0x20	; 32
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	0e 94 58 09 	call	0x12b0	; 0x12b0 <fputc>
    126c:	2a 94       	dec	r2
    126e:	f6 cf       	rjmp	.-20     	; 0x125c <vfprintf+0x39a>
    1270:	f6 01       	movw	r30, r12
    1272:	86 81       	ldd	r24, Z+6	; 0x06
    1274:	97 81       	ldd	r25, Z+7	; 0x07
    1276:	02 c0       	rjmp	.+4      	; 0x127c <vfprintf+0x3ba>
    1278:	8f ef       	ldi	r24, 0xFF	; 255
    127a:	9f ef       	ldi	r25, 0xFF	; 255
    127c:	2b 96       	adiw	r28, 0x0b	; 11
    127e:	e2 e1       	ldi	r30, 0x12	; 18
    1280:	0c 94 0e 0a 	jmp	0x141c	; 0x141c <__epilogue_restores__>

00001284 <strnlen_P>:
    1284:	fc 01       	movw	r30, r24
    1286:	05 90       	lpm	r0, Z+
    1288:	61 50       	subi	r22, 0x01	; 1
    128a:	70 40       	sbci	r23, 0x00	; 0
    128c:	01 10       	cpse	r0, r1
    128e:	d8 f7       	brcc	.-10     	; 0x1286 <strnlen_P+0x2>
    1290:	80 95       	com	r24
    1292:	90 95       	com	r25
    1294:	8e 0f       	add	r24, r30
    1296:	9f 1f       	adc	r25, r31
    1298:	08 95       	ret

0000129a <strnlen>:
    129a:	fc 01       	movw	r30, r24
    129c:	61 50       	subi	r22, 0x01	; 1
    129e:	70 40       	sbci	r23, 0x00	; 0
    12a0:	01 90       	ld	r0, Z+
    12a2:	01 10       	cpse	r0, r1
    12a4:	d8 f7       	brcc	.-10     	; 0x129c <strnlen+0x2>
    12a6:	80 95       	com	r24
    12a8:	90 95       	com	r25
    12aa:	8e 0f       	add	r24, r30
    12ac:	9f 1f       	adc	r25, r31
    12ae:	08 95       	ret

000012b0 <fputc>:
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	cf 93       	push	r28
    12b6:	df 93       	push	r29
    12b8:	fb 01       	movw	r30, r22
    12ba:	23 81       	ldd	r18, Z+3	; 0x03
    12bc:	21 fd       	sbrc	r18, 1
    12be:	03 c0       	rjmp	.+6      	; 0x12c6 <fputc+0x16>
    12c0:	8f ef       	ldi	r24, 0xFF	; 255
    12c2:	9f ef       	ldi	r25, 0xFF	; 255
    12c4:	2c c0       	rjmp	.+88     	; 0x131e <fputc+0x6e>
    12c6:	22 ff       	sbrs	r18, 2
    12c8:	16 c0       	rjmp	.+44     	; 0x12f6 <fputc+0x46>
    12ca:	46 81       	ldd	r20, Z+6	; 0x06
    12cc:	57 81       	ldd	r21, Z+7	; 0x07
    12ce:	24 81       	ldd	r18, Z+4	; 0x04
    12d0:	35 81       	ldd	r19, Z+5	; 0x05
    12d2:	42 17       	cp	r20, r18
    12d4:	53 07       	cpc	r21, r19
    12d6:	44 f4       	brge	.+16     	; 0x12e8 <fputc+0x38>
    12d8:	a0 81       	ld	r26, Z
    12da:	b1 81       	ldd	r27, Z+1	; 0x01
    12dc:	9d 01       	movw	r18, r26
    12de:	2f 5f       	subi	r18, 0xFF	; 255
    12e0:	3f 4f       	sbci	r19, 0xFF	; 255
    12e2:	31 83       	std	Z+1, r19	; 0x01
    12e4:	20 83       	st	Z, r18
    12e6:	8c 93       	st	X, r24
    12e8:	26 81       	ldd	r18, Z+6	; 0x06
    12ea:	37 81       	ldd	r19, Z+7	; 0x07
    12ec:	2f 5f       	subi	r18, 0xFF	; 255
    12ee:	3f 4f       	sbci	r19, 0xFF	; 255
    12f0:	37 83       	std	Z+7, r19	; 0x07
    12f2:	26 83       	std	Z+6, r18	; 0x06
    12f4:	14 c0       	rjmp	.+40     	; 0x131e <fputc+0x6e>
    12f6:	8b 01       	movw	r16, r22
    12f8:	ec 01       	movw	r28, r24
    12fa:	fb 01       	movw	r30, r22
    12fc:	00 84       	ldd	r0, Z+8	; 0x08
    12fe:	f1 85       	ldd	r31, Z+9	; 0x09
    1300:	e0 2d       	mov	r30, r0
    1302:	09 95       	icall
    1304:	89 2b       	or	r24, r25
    1306:	e1 f6       	brne	.-72     	; 0x12c0 <fputc+0x10>
    1308:	d8 01       	movw	r26, r16
    130a:	16 96       	adiw	r26, 0x06	; 6
    130c:	8d 91       	ld	r24, X+
    130e:	9c 91       	ld	r25, X
    1310:	17 97       	sbiw	r26, 0x07	; 7
    1312:	01 96       	adiw	r24, 0x01	; 1
    1314:	17 96       	adiw	r26, 0x07	; 7
    1316:	9c 93       	st	X, r25
    1318:	8e 93       	st	-X, r24
    131a:	16 97       	sbiw	r26, 0x06	; 6
    131c:	ce 01       	movw	r24, r28
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	1f 91       	pop	r17
    1324:	0f 91       	pop	r16
    1326:	08 95       	ret

00001328 <__ultoa_invert>:
    1328:	fa 01       	movw	r30, r20
    132a:	aa 27       	eor	r26, r26
    132c:	28 30       	cpi	r18, 0x08	; 8
    132e:	51 f1       	breq	.+84     	; 0x1384 <__ultoa_invert+0x5c>
    1330:	20 31       	cpi	r18, 0x10	; 16
    1332:	81 f1       	breq	.+96     	; 0x1394 <__ultoa_invert+0x6c>
    1334:	e8 94       	clt
    1336:	6f 93       	push	r22
    1338:	6e 7f       	andi	r22, 0xFE	; 254
    133a:	6e 5f       	subi	r22, 0xFE	; 254
    133c:	7f 4f       	sbci	r23, 0xFF	; 255
    133e:	8f 4f       	sbci	r24, 0xFF	; 255
    1340:	9f 4f       	sbci	r25, 0xFF	; 255
    1342:	af 4f       	sbci	r26, 0xFF	; 255
    1344:	b1 e0       	ldi	r27, 0x01	; 1
    1346:	3e d0       	rcall	.+124    	; 0x13c4 <__ultoa_invert+0x9c>
    1348:	b4 e0       	ldi	r27, 0x04	; 4
    134a:	3c d0       	rcall	.+120    	; 0x13c4 <__ultoa_invert+0x9c>
    134c:	67 0f       	add	r22, r23
    134e:	78 1f       	adc	r23, r24
    1350:	89 1f       	adc	r24, r25
    1352:	9a 1f       	adc	r25, r26
    1354:	a1 1d       	adc	r26, r1
    1356:	68 0f       	add	r22, r24
    1358:	79 1f       	adc	r23, r25
    135a:	8a 1f       	adc	r24, r26
    135c:	91 1d       	adc	r25, r1
    135e:	a1 1d       	adc	r26, r1
    1360:	6a 0f       	add	r22, r26
    1362:	71 1d       	adc	r23, r1
    1364:	81 1d       	adc	r24, r1
    1366:	91 1d       	adc	r25, r1
    1368:	a1 1d       	adc	r26, r1
    136a:	20 d0       	rcall	.+64     	; 0x13ac <__ultoa_invert+0x84>
    136c:	09 f4       	brne	.+2      	; 0x1370 <__ultoa_invert+0x48>
    136e:	68 94       	set
    1370:	3f 91       	pop	r19
    1372:	2a e0       	ldi	r18, 0x0A	; 10
    1374:	26 9f       	mul	r18, r22
    1376:	11 24       	eor	r1, r1
    1378:	30 19       	sub	r19, r0
    137a:	30 5d       	subi	r19, 0xD0	; 208
    137c:	31 93       	st	Z+, r19
    137e:	de f6       	brtc	.-74     	; 0x1336 <__ultoa_invert+0xe>
    1380:	cf 01       	movw	r24, r30
    1382:	08 95       	ret
    1384:	46 2f       	mov	r20, r22
    1386:	47 70       	andi	r20, 0x07	; 7
    1388:	40 5d       	subi	r20, 0xD0	; 208
    138a:	41 93       	st	Z+, r20
    138c:	b3 e0       	ldi	r27, 0x03	; 3
    138e:	0f d0       	rcall	.+30     	; 0x13ae <__ultoa_invert+0x86>
    1390:	c9 f7       	brne	.-14     	; 0x1384 <__ultoa_invert+0x5c>
    1392:	f6 cf       	rjmp	.-20     	; 0x1380 <__ultoa_invert+0x58>
    1394:	46 2f       	mov	r20, r22
    1396:	4f 70       	andi	r20, 0x0F	; 15
    1398:	40 5d       	subi	r20, 0xD0	; 208
    139a:	4a 33       	cpi	r20, 0x3A	; 58
    139c:	18 f0       	brcs	.+6      	; 0x13a4 <__ultoa_invert+0x7c>
    139e:	49 5d       	subi	r20, 0xD9	; 217
    13a0:	31 fd       	sbrc	r19, 1
    13a2:	40 52       	subi	r20, 0x20	; 32
    13a4:	41 93       	st	Z+, r20
    13a6:	02 d0       	rcall	.+4      	; 0x13ac <__ultoa_invert+0x84>
    13a8:	a9 f7       	brne	.-22     	; 0x1394 <__ultoa_invert+0x6c>
    13aa:	ea cf       	rjmp	.-44     	; 0x1380 <__ultoa_invert+0x58>
    13ac:	b4 e0       	ldi	r27, 0x04	; 4
    13ae:	a6 95       	lsr	r26
    13b0:	97 95       	ror	r25
    13b2:	87 95       	ror	r24
    13b4:	77 95       	ror	r23
    13b6:	67 95       	ror	r22
    13b8:	ba 95       	dec	r27
    13ba:	c9 f7       	brne	.-14     	; 0x13ae <__ultoa_invert+0x86>
    13bc:	00 97       	sbiw	r24, 0x00	; 0
    13be:	61 05       	cpc	r22, r1
    13c0:	71 05       	cpc	r23, r1
    13c2:	08 95       	ret
    13c4:	9b 01       	movw	r18, r22
    13c6:	ac 01       	movw	r20, r24
    13c8:	0a 2e       	mov	r0, r26
    13ca:	06 94       	lsr	r0
    13cc:	57 95       	ror	r21
    13ce:	47 95       	ror	r20
    13d0:	37 95       	ror	r19
    13d2:	27 95       	ror	r18
    13d4:	ba 95       	dec	r27
    13d6:	c9 f7       	brne	.-14     	; 0x13ca <__ultoa_invert+0xa2>
    13d8:	62 0f       	add	r22, r18
    13da:	73 1f       	adc	r23, r19
    13dc:	84 1f       	adc	r24, r20
    13de:	95 1f       	adc	r25, r21
    13e0:	a0 1d       	adc	r26, r0
    13e2:	08 95       	ret

000013e4 <__prologue_saves__>:
    13e4:	2f 92       	push	r2
    13e6:	3f 92       	push	r3
    13e8:	4f 92       	push	r4
    13ea:	5f 92       	push	r5
    13ec:	6f 92       	push	r6
    13ee:	7f 92       	push	r7
    13f0:	8f 92       	push	r8
    13f2:	9f 92       	push	r9
    13f4:	af 92       	push	r10
    13f6:	bf 92       	push	r11
    13f8:	cf 92       	push	r12
    13fa:	df 92       	push	r13
    13fc:	ef 92       	push	r14
    13fe:	ff 92       	push	r15
    1400:	0f 93       	push	r16
    1402:	1f 93       	push	r17
    1404:	cf 93       	push	r28
    1406:	df 93       	push	r29
    1408:	cd b7       	in	r28, 0x3d	; 61
    140a:	de b7       	in	r29, 0x3e	; 62
    140c:	ca 1b       	sub	r28, r26
    140e:	db 0b       	sbc	r29, r27
    1410:	0f b6       	in	r0, 0x3f	; 63
    1412:	f8 94       	cli
    1414:	de bf       	out	0x3e, r29	; 62
    1416:	0f be       	out	0x3f, r0	; 63
    1418:	cd bf       	out	0x3d, r28	; 61
    141a:	09 94       	ijmp

0000141c <__epilogue_restores__>:
    141c:	2a 88       	ldd	r2, Y+18	; 0x12
    141e:	39 88       	ldd	r3, Y+17	; 0x11
    1420:	48 88       	ldd	r4, Y+16	; 0x10
    1422:	5f 84       	ldd	r5, Y+15	; 0x0f
    1424:	6e 84       	ldd	r6, Y+14	; 0x0e
    1426:	7d 84       	ldd	r7, Y+13	; 0x0d
    1428:	8c 84       	ldd	r8, Y+12	; 0x0c
    142a:	9b 84       	ldd	r9, Y+11	; 0x0b
    142c:	aa 84       	ldd	r10, Y+10	; 0x0a
    142e:	b9 84       	ldd	r11, Y+9	; 0x09
    1430:	c8 84       	ldd	r12, Y+8	; 0x08
    1432:	df 80       	ldd	r13, Y+7	; 0x07
    1434:	ee 80       	ldd	r14, Y+6	; 0x06
    1436:	fd 80       	ldd	r15, Y+5	; 0x05
    1438:	0c 81       	ldd	r16, Y+4	; 0x04
    143a:	1b 81       	ldd	r17, Y+3	; 0x03
    143c:	aa 81       	ldd	r26, Y+2	; 0x02
    143e:	b9 81       	ldd	r27, Y+1	; 0x01
    1440:	ce 0f       	add	r28, r30
    1442:	d1 1d       	adc	r29, r1
    1444:	0f b6       	in	r0, 0x3f	; 63
    1446:	f8 94       	cli
    1448:	de bf       	out	0x3e, r29	; 62
    144a:	0f be       	out	0x3f, r0	; 63
    144c:	cd bf       	out	0x3d, r28	; 61
    144e:	ed 01       	movw	r28, r26
    1450:	08 95       	ret

00001452 <_exit>:
    1452:	f8 94       	cli

00001454 <__stop_program>:
    1454:	ff cf       	rjmp	.-2      	; 0x1454 <__stop_program>
